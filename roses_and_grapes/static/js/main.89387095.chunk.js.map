{"version":3,"sources":["data/imgs/disappointing.jpg","data/imgs/horrible.jpg","data/imgs/good.jpg","data/imgs/perfect.jpg","data/audio/de.mp3","data/audio/en.mp3","data/audio/es.mp3","data/audio/fr.mp3","data/audio/ja.mp3","data/audio/ru.mp3","data/audio/sv.mp3","data/audio/uk.mp3","data/audio/zh.mp3","components/Audio.js","components/Question.js","components/QuestionCount.js","components/AnswerOption.js","components/Quiz.js","components/Result.js","data/languageQuestions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Audio","props","controls","src","Question","className","audioSrc","QuestionCount","counter","total","AnswerOption","backgroundColor","correct","type","name","checked","selected","id","answerId","disabled","answer","onChange","onAnswerSelected","style","htmlFor","answerContent","Quiz","questionId","questionTotal","questionFile","answerOptions","map","option","index","key","content","Result","level","text","img","horribleImg","color","disappointingImg","goodImg","perfectImg","quizResult","successCount","totalCount","alt","questions","file","ru","answers","ja","es","fr","sv","en","zh","de","uk","App","handleAnswerSelected","event","setUserAnswer","currentTarget","state","length","setTimeout","setNextQuestion","setResults","getResultLevel","successes","filter","e","result","setState","isCorrect","parseInt","languageQuestions","undefined","this","currQuestion","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.89387095.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/disappointing.36dc4a0c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/horrible.7162ebee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/good.fc169fbe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/perfect.0c32932b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/de.77dafde7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/en.93c23d87.mp3\";","module.exports = __webpack_public_path__ + \"static/media/es.3218c6c1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fr.6193df63.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ja.f873de71.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ru.95824f6a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sv.c2c74f8d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/uk.a641dfd1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/zh.8200a15b.mp3\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction Audio(props) {\n  return (\n    <audio controls src={props.src}></audio>\n  );\n}\n\nAudio.propTypes = {\n  src: PropTypes.string.isRequired,\n};\n\nexport default Audio;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Audio from '../components/Audio';\n\n\nfunction Question(props) {\n  return (\n    <div>\n      <h2 className=\"question\">\n        Якою це мовою ґуґл траслейт читає?\n      </h2>\n      <Audio src={props.audioSrc}/>\n    </div>\n  );\n}\n\n\nQuestion.propTypes = {\n  audioSrc: PropTypes.string.isRequired,\n};\n\nexport default Question;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction QuestionCount(props) {\n  return (\n    <div className=\"questionCount\">\n      Питання <span>{props.counter}</span> із <span>{props.total}</span>\n    </div>\n  )\n}\n\n\nQuestionCount.propTypes = {\n  counter: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport default QuestionCount;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction AnswerOption(props) {\n  const backgroundColor = props.correct? '#93f567' : '#f56767';\n  return (\n    <li>\n      <input\n        type=\"radio\"\n        className=\"radioCustomButton\"\n        name=\"radioGroup\"\n        checked={props.selected}\n        id={props.answerId}\n        disabled={props.answer}\n        onChange={props.onAnswerSelected}\n      />\n      <label\n        className=\"radioCustomLabel\"\n        style={props.selected? {backgroundColor: backgroundColor} : {}}\n        htmlFor={props.answerId}>\n        {props.answerContent}\n      </label>\n    </li>\n  )\n}\n\n\nAnswerOption.propTypes = {\n  answerId: PropTypes.number.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  correct: PropTypes.bool,\n}\n\nexport default AnswerOption;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\n\n\nfunction Quiz(props) {\n  function renderAnswerOptions(option, index) {\n    return (\n      <AnswerOption\n        key={index}\n        answerId={index}\n        answerContent={option.content}\n        selected={props.answerId===index}\n        correct={option.correct}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n  return (\n    <div className='quiz'>\n      <QuestionCount\n        counter={props.questionId + 1}\n        total={props.questionTotal}\n      />\n      <Question audioSrc={props.questionFile} />\n      <ul className=\"answerOptions\">\n        {props.answerOptions.map( renderAnswerOptions )}\n      </ul>\n    </div>\n  )\n}\n\n\nQuiz.propTypes = {\n  answerId: PropTypes.number.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  questionFile: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport disappointingImg from '../data/imgs/disappointing.jpg';\nimport horribleImg from '../data/imgs/horrible.jpg';\nimport goodImg from '../data/imgs/good.jpg';\nimport perfectImg from '../data/imgs/perfect.jpg';\n\n\nfunction Result(props) {\n  const successLevels = [\n    {\n      text: \"Ти старалась/вся!\",\n      img: horribleImg,\n      color: \"#5598fc\",\n    },\n    {\n      text: \"Так собі!\",\n      img: disappointingImg,\n      color: \"#55fc57\",\n    },\n    {\n      text: \"Дуже молодець!\",\n      img: goodImg,\n      color: \"#fc9155\",\n    },\n    {\n      text: \"Ти ідеал!\",\n      img: perfectImg,\n      color: \"#fc559a\",\n    },\n  ]\n  const level = successLevels[props.quizResult]\n  return (\n    <div className=\"result\" style={{color: level.color}} >\n      <p>{props.successCount} із {props.totalCount}</p>\n      <img  className=\"kvasyk\" alt=\"\" src={level.img}/>\n      <p className=\"resultText\">{level.text}</p>\n    </div>\n  );\n}\n\nResult.propTypes = {\n  quizResult: PropTypes.number.isRequired,\n  successCount: PropTypes.number.isRequired,\n  totalCount: PropTypes.number.isRequired,\n};\n\nexport default Result;","import de from './audio/de.mp3';\nimport en from './audio/en.mp3';\nimport es from './audio/es.mp3';\nimport fr from './audio/fr.mp3';\nimport ja from './audio/ja.mp3';\nimport ru from './audio/ru.mp3';\nimport sv from './audio/sv.mp3';\nimport uk from './audio/uk.mp3';\nimport zh from './audio/zh.mp3';\n\n\nconst questions = [\n    {\n        file: ru,\n        answers: [\n            {content: 'І краткає? Це болгарська'},\n            {content: '\"Красівє і каріснє\" звучить як польська'},\n            {content: 'За неогубленим ненапруженим голосним передньо-середнього ряду середньо-високого підняття віпізнаю англійську'},\n            {content: 'Ану, хай скаже паляниця! Це російська', correct: true},\n        ]\n    },\n    {\n        file: ja,\n        answers: [\n            {content: 'Португальска — входить в десятку наймилозвучніших мов світу!'},\n            {content: 'Чітко виражена палателізація приголосних характерна для арабської'},\n            {content: 'Чую \"вінорато\" — як в італійській'},\n            {content: 'Хіба ж я аніме не дивилася/вся? Це японська', correct: true},\n        ]\n    },\n    {\n        file: es,\n        answers: [\n            {content: 'Говорить ніби із Закарпаття, то, певне, румунська'},\n            {content: 'Глухий зубний фрикативний в \"музики\" вказує на іспанську. Кастильску іспанську', correct: true},\n            {content: 'Строга і чітка, як німецька'},\n            {content: 'Як фанат/ка фільмів Чжун Хо корейську будь-де впізнаю'},\n        ]\n    },\n    {\n        file: fr,\n        answers: [\n            {content: 'Немов Чевела Варгас заспівала — іспанська, звісно'},\n            {content: 'Немов Лата Мангешкар заспівала — гінді, звісно'},\n            {content: 'Немов Патріся Каас заспівала — французька, звісно', correct: true},\n            {content: 'Немов ABBA заспівала — шведська, звісно'},\n        ]\n    },\n    {\n        file: sv,\n        answers: [\n            {content: 'Фонетичні харакеристики просто кричать — суахілі'},\n            {content: 'Це латина — мова католиків і темної магії'},\n            {content: 'Звучить по-скандинавськи. Оскільки це тут єдиний варіант, скажу шведська', correct: true},\n            {content: 'Італійська, вимова як у сицилійської мафії в американських фільмах'},\n        ]\n    },\n    {\n        file: en,\n        answers: [\n            {content: 'Дервньогрецька — мова давньогрецьких філософів і темної магії'},\n            {content: \"Це російська, не дарма ж кажуть, що вона навіть не входить до родини слов'янських\"},\n            {content: '\"Діджей віноґрад\"? — Англійська, мова Шекспіра', correct: true},\n            {content: 'Чітко виражена тональнісь, це мусить бути китайська'},\n        ]\n    },\n    {\n        file: zh,\n        answers: [\n            {content: 'Нагадує \"Йожин з Бажин\" — чеська'},\n            {content: 'Налічила/в 12 способів вимови \"е\", значить англійська'},\n            {content: 'Схоже на китайську', correct: true},\n            {content: 'Есперанто — мова Блакитної ліги у Сазі'},\n        ]\n    },\n    {\n        file: de,\n        answers: [\n            {content: 'Німецька — чую дзвінкий язичковий фрикативний', correct: true},\n            {content: 'Висока Валірійська. Вчу її на Duolingo, сова всім передає \"Валар моргуліс!\"'},\n            {content: 'Милозвучна і співуча як японська'},\n            {content: \"Говорить ніби із Закарпаття, може, тоді угорська\"},\n        ]\n    },\n    {\n        file: uk,\n        answers: [\n            {content: 'Українська, але чути, що вона нею щодень не говорить', correct: true},\n            {content: \"Українська — чую функціонування побічного наголосу\", correct: true},\n            {content: \"Українська — слов'їна, друга за милозвучністю мова світу\", correct: true},\n            {content: \"Українська, я Альфа нею дивилася/вся\", correct: true},\n        ]\n    },\n\n]\n\nexport default questions;","import React from 'react';\n\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\nimport languageQuestions from './data/languageQuestions';\n\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.questions = languageQuestions;\n\n    this.state = {\n      counter: 0,\n      questionId: 0,\n      answerId: -1,\n      successCount: 0,\n      result: undefined,\n    }\n  }\n\n  handleAnswerSelected = (event) => {\n    this.setUserAnswer(event.currentTarget.id);\n    if (this.state.questionId < this.questions.length - 1) {\n      setTimeout(() => this.setNextQuestion(), 300);\n    } else {\n      setTimeout(() => this.setResults(this.getResultLevel()), 300);\n    }\n  }\n\n  getResultLevel = () => {\n    const successes = this.state.successCount;\n    const thresholds = [2, 5, 9];\n    return thresholds.filter(e => e <= successes).length;\n  }\n\n  setResults = (result) => {\n    this.setState({ result: result });\n  }\n\n  setUserAnswer = (answerId) => {\n    const isCorrect = this.questions[this.state.questionId].answers[answerId].correct;\n    this.setState((state) => ({\n      answerId: parseInt(answerId),\n      successCount: state.successCount + (isCorrect? 1 : 0),\n    }))\n  }\n\n  setNextQuestion() {\n    const questionId = this.state.questionId + 1;\n    this.setState({\n      questionId: questionId,\n      answerId: -1,\n    });\n  }\n\n  render() {\n    const currQuestion = this.questions[this.state.questionId];\n    return (\n      <div className=\"App\">\n        {\n          this.state.result !== undefined?\n          <Result\n            quizResult={this.state.result}\n            totalCount={this.questions.length}\n            successCount={this.state.successCount} /> :\n          <Quiz\n            answerId={this.state.answerId}\n            answerOptions={currQuestion.answers}\n            questionId={this.state.questionId}\n            questionFile={currQuestion.file}\n            questionTotal={this.questions.length}\n            onAnswerSelected={this.handleAnswerSelected}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}