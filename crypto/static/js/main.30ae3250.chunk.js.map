{"version":3,"sources":["img/ancient_greeks_bold.png","img/ancient_greeks_hair.png","ciphers/alphabet.js","ciphers/mathHelpers.js","components/CipherWidget.js","ciphers/caesar.js","components/CaesarTextField.js","components/CaesarKeyControls.js","components/CaesarWidget.js","components/CaesarBreakWidget.js","content/cipherTexts.js","components/SteganographyWidget.js","content/ChapterOne.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ALPHABET","ALPHABET_LEN","length","ALPHABET_DICT","Object","objectSpread","split","REVERSE_DICT","entries","_i","_arr","alphabet_ref3","alphabet_ref2","slicedToArray","key","FULL_ALPHADICT","mod","n","m","SuccessIndicator","_ref","isSuccessClass","isSuccess","react_default","a","createElement","style","position","className","CipherWidget","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","updateCipherKey","bind","assertThisInitialized","e","setState","target","value","success","parseInt","successKey","title","renderBody","cipherKey_","updateCipherKey_","React","Component","encipher","openText","map","letter","join","decipher","cipherText","trimKeyDifference","keyDiff","Math","abs","sign","CipherTextField","animating","animationTimeout","undefined","prevCipherKey","cipherKey","prevProps","prevState","snapshot","_this2","setTimeout","clearTimeout","_this$props","text","reverse","vals","toConsumableArray","prevKey","currKey","valNum","firstVal","min","Array","keys","v","getIntermediateKeys","textsNum","texts","EnicpheredText","CipherKey","moveCoef","styleNotAnimating","transform","concat","transition","Fragment","_ref$className","toString","padStart","_ref2","_ref2$className","textClassName","CaesarKeyLabel","htmlFor","CaesarBreakKeyLabel","CaesarKeyControls","label","CipherKeyControls","assign","CaesarBreakKeyControls","type","name","onChange","CaesarCipherWidget","src_components_CipherWidget","CaesarBody","_ref3","CaesarTextField_CipherTextField","CaesarBreakWidget","CaesarBreakWidget_CeasarBreakBody","CeasarBreakBody","getText","splitInitText","clearInterval","textUpdateInterval","textUpdateCount","setInterval","prevText","step","preTextLen","slice","reduce","acc","el","max","preText","textToDecipher","lastPreWord","newText","caesarText","IMG_SIZE","width","height","SteganographyWidget","canvasRef","createRef","hairImgRef","paintOn","startDrawing","stopDrawing","continueDrawing","loadCanvas","context","img","canvas","current","getContext","drawImage","globalCompositeOperation","strokeStyle","lineJoin","lineWidth","bbox","getBoundingClientRect","mouseX","clientX","x","mouseY","clientY","y","moveTo","lineTo","closePath","stroke","src","greeksImgUrl","alt","hairImgUrl","ref","onLoad","onMouseDown","onMouseUp","onMouseLeave","onMouseMove","ChapterOne","SteganographyWidget_SteganographyWidget","toLowerCase","App","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.30ae3250.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ancient_greeks_bold.52f725f2.png\";","module.exports = __webpack_public_path__ + \"static/media/ancient_greeks_hair.f4529119.png\";","export const ALPHABET = 'абвгґдеєжзиіїйклмнопрстуфхцчшщьюя'\nexport const ALPHABET_LEN = ALPHABET.length\nconst ALPHABET_DICT = {...ALPHABET.split('')}\nconst REVERSE_DICT = {}\nfor (const [key, val] of Object.entries(ALPHABET_DICT)) {\n    REVERSE_DICT[val] = key\n}\nexport const FULL_ALPHADICT = {...ALPHABET_DICT, ...REVERSE_DICT}","export function mod(n, m) {\n  return ((n % m) + m) % m;\n}","import React from 'react'\n\n\nimport { ALPHABET_LEN } from '../ciphers/alphabet'\nimport { mod } from '../ciphers/mathHelpers'\nimport './CipherWidget.css'\n\n\nfunction SuccessIndicator({isSuccess}) {\n  const isSuccessClass = isSuccess? ' cipher-widget__success-indicator_is-success' : ''\n  return (\n    <div style={{position: 'relative'}}>\n      <div className={'cipher-widget__success-indicator' + isSuccessClass}></div>\n    </div>\n  )\n}\n\n\nclass CipherWidget extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      key: 0\n    }\n    this.updateCipherKey = this.updateCipherKey.bind(this)\n  }\n\n  updateCipherKey(e) {\n    this.setState({\n      key: e.target.value\n    })\n  }\n\n  render() {\n    const cipherKey = mod(parseInt(this.state.key || 0), ALPHABET_LEN)\n    const success = cipherKey === this.props.successKey\n    return (\n      <section className={\n          'cipher-widget ' + this.props.className\n          + (success? ' cipher-widget_success' : '')\n        }>\n        <SuccessIndicator isSuccess={success} />\n        <h3 className='cipher-widget__title'>{this.props.title}</h3>\n        {this.props.renderBody({\n          cipherKey_: this.state.key,\n          updateCipherKey_: this.updateCipherKey,\n        })}\n      </section>\n    )\n  }\n}\n\n\nexport default CipherWidget","import { mod } from './mathHelpers'\nimport { FULL_ALPHADICT, ALPHABET_LEN } from './alphabet'\n\nexport function encipher(key, openText) {\n  const res = openText\n    .split('')\n    .map(\n      letter => FULL_ALPHADICT[\n        mod((parseInt(FULL_ALPHADICT[letter]) + key), ALPHABET_LEN)\n      ] || letter\n    )\n    .join('')\n  return res\n}\n\nexport function decipher(key, cipherText) {\n  return encipher(-key, cipherText)\n}\n","import React from 'react'\n\nimport {ALPHABET_LEN} from '../ciphers/alphabet'\nimport { mod } from '../ciphers/mathHelpers'\nimport { encipher } from '../ciphers/caesar'\n\n\nfunction trimKeyDifference(keyDiff) {\n  // if keys are more than ALPHABET_LEN values apart there's no need to\n  // show ALL the intermediate values\n  return Math.abs(keyDiff) > ALPHABET_LEN\n    ? ALPHABET_LEN * Math.sign(keyDiff) + keyDiff % ALPHABET_LEN\n    : keyDiff\n}\n\nexport function getIntermediateKeys(prevKey, currKey) {\n  const valNum = Math.abs(trimKeyDifference(currKey - prevKey)) + 3\n  const firstVal = Math.min(prevKey, currKey) - 1\n  return [...Array(valNum).keys()].map(v => v + firstVal)\n}\n\n\n// todo refactor\nexport default class CipherTextField extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      animating: false,\n    }\n\n    this.animationTimeout = undefined\n    this.prevCipherKey = this.props.cipherKey\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.cipherKey === this.props.cipherKey) {\n      return\n    }\n    this.prevCipherKey = prevProps.cipherKey\n    this.setState({animating: false})\n    this.animationTimeout = setTimeout(\n      () => this.setState({animating: true}),\n      200\n    )\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.animationTimeout)\n  }\n\n  render() {\n    const {text, cipherKey, reverse} = this.props\n    const vals = [...getIntermediateKeys(this.prevCipherKey, cipherKey)]\n    const textsNum = vals.length\n    const texts = vals.map(\n      v =>\n        <EnicpheredText text={text} cipherKey={v} key={v} reverse={reverse}\n          className={v !== cipherKey? 'cipher-widget__text_is-neighbour' : ''}/>\n    )\n    const keys = vals.map(\n      v =>\n        <CipherKey cipherKey={v} key={v} reverse={reverse}\n          className={v !== cipherKey? 'cipher-widget__text_is-neighbour' : ''}/>\n    )\n    // todo move this logic to separate function and test it\n    const moveCoef = trimKeyDifference(this.prevCipherKey - cipherKey)\n    const styleNotAnimating = {\n      transform: moveCoef > 0\n        ? `translateY(calc(${-textsNum + 3} * 10px + ${-textsNum + 3} * 1em))`\n        : 'none'\n    }\n    const style = {\n      transform: moveCoef < 0\n        ? `translateY(calc(${moveCoef} * 10px + ${moveCoef} * 1em))`\n        : 'none',\n      transition: \"transform .6s\",\n    }\n    return  (\n    <>\n      <div className={'cipher-widget__key-column cipher-widget__column_sliding'}>\n        <div style={this.state.animating? style : styleNotAnimating}>\n          {keys}\n        </div>\n      </div>\n      <div className={'cipher-widget__text-column cipher-widget__column_sliding'}>\n        <div style={this.state.animating? style : styleNotAnimating}>\n          {texts}\n        </div>\n      </div>\n    </>\n    )\n  }\n}\n\nfunction CipherKey({cipherKey, reverse, className=''}) {\n  if (reverse) {\n    cipherKey = ALPHABET_LEN - cipherKey\n    className = className + ' cipher-widger__text_is-reverse'\n  }\n  cipherKey = mod(cipherKey, ALPHABET_LEN)\n  return <p className={'cipher-widget__text ' + className}>\n    {cipherKey.toString().padStart(2, 0)}\n  </p>\n}\n\nfunction EnicpheredText({text, cipherKey, reverse, className=''}) {\n  cipherKey = mod(cipherKey, ALPHABET_LEN)\n  const textClassName = reverse\n    ? 'cipher-widget__text_plain'\n    : 'cipher-widget__text_cipher'\n  return (\n    <p className={'cipher-widget__text ' + className + ' ' + textClassName}>\n      {encipher(cipherKey, text)}\n    </p>\n  )\n}\n","import React from 'react'\n\nfunction CaesarKeyLabel() {\n  return <label htmlFor=\"key\" className='cipher-widget__label'>ключ:</label>\n}\n\n\nfunction CaesarBreakKeyLabel() {\n  return (\n    <label htmlFor='key'\n    className='cipher-widget__label cipher-widget__label_break'>\n      Таблиця заміни з ключем:\n    </label>\n  )\n}\n\n\nexport function CaesarKeyControls(props) {\n  const label = <CaesarKeyLabel/>\n  return (\n    <div className='cipher-widget__control-column'>\n      <CipherKeyControls {...props} label={label}/>\n    </div>\n  )\n}\n\nexport function CaesarBreakKeyControls(props) {\n  const label = <CaesarBreakKeyLabel/>\n  return (\n    <div>\n      <CipherKeyControls {...props} label={label} />\n    </div>\n  )\n}\n\n\nfunction CipherKeyControls({cipherKey, updateCipherKey, label}) {\n  return (\n      <div className='cipher-widget__key-form'>\n        {label}\n        <input type=\"number\" name=\"key\"\n            className='cipher-widget__key-input'\n            value={cipherKey}\n            onChange={updateCipherKey} />\n      </div>\n  )\n}","import React from 'react'\n\nimport CipherWidget from './CipherWidget'\nimport CipherTextField from './CaesarTextField'\nimport {CaesarKeyControls} from './CaesarKeyControls'\n\n\nexport default function CaesarCipherWidget({title, text, cipherKey, successKey, reverse}) {\n  const renderBody = ({cipherKey_, updateCipherKey_}) => {\n    return (\n      <CaesarBody text={text} reverse={reverse}\n        cipherKey={cipherKey_} updateCipherKey={updateCipherKey_}/>\n    )\n  }\n  return <CipherWidget renderBody={renderBody} cipherKey={cipherKey} title={title}\n           className={reverse? 'cipher-widget_decipher' : 'cipher-widget_enicpher'}\n           successKey={successKey}/>\n}\n\n\nfunction CaesarBody({text, cipherKey, updateCipherKey, reverse}) {\n  const textClassName = reverse\n    ? 'cipher-widget__text_cipher'\n    : 'cipher-widget__text_plain'\n  return (\n    <div className='cipher-widget__body'>\n      <div className='cipher-widget__ref-section'>\n        <div className='cipher-widget__control-column'>\n          <p className='cipher-widget__label'>\n            {reverse? 'шифротекст:' : 'текст:'}\n          </p>\n        </div>\n        <div className='cipher-widget__key-column'></div>\n        <div className='cipher-widget__text-column'>\n          <p className={'cipher-widget__text ' + textClassName}>{text}</p>\n        </div>\n      </div>\n      <div className='cipher-widget__work-section'>\n        <CaesarKeyControls cipherKey={cipherKey} updateCipherKey={updateCipherKey}/>\n        <CipherTextField text={text}\n          cipherKey={(reverse? -parseInt(cipherKey) : parseInt(cipherKey)) || 0}\n          reverse={reverse}\n        />\n      </div>\n    </div>\n  )\n}\n\n","import React from 'react'\n\nimport { ALPHABET, ALPHABET_LEN } from '../ciphers/alphabet'\nimport { decipher } from '../ciphers/caesar'\nimport { mod } from '../ciphers/mathHelpers'\nimport CipherWidget from './CipherWidget'\nimport {CaesarBreakKeyControls} from './CaesarKeyControls'\n\n\nexport default function CaesarBreakWidget({title, text, successKey}){\n  const renderBody = ({\n    updateCipherKey_, cipherKey_\n  }) => <CeasarBreakBody cipherKey={cipherKey_} updateCipherKey={updateCipherKey_} text={text}/>\n  return (\n      <CipherWidget title={title} renderBody={renderBody} successKey={successKey} />\n  )\n}\n\n\nclass CeasarBreakBody extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.getText = this.getText.bind(this)\n    this.state = {\n      text: this.getText()\n    }\n    this.splitInitText = this.props.text.split(' ')\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.textUpdateInterval)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.cipherKey !== prevProps.cipherKey) {\n      const cipherKey = mod(prevProps.cipherKey, ALPHABET_LEN)\n      this.setState({text: decipher(cipherKey, this.props.text)})\n      this.textUpdateCount = 0\n      clearInterval(this.textUpdateInterval)\n      this.textUpdateInterval = setInterval(\n        () => {\n          this.setState(prevState => ({text: this.getText(prevState.text, this.textUpdateCount)}))\n          this.textUpdateCount = this.textUpdateCount + 1;\n          if (this.textUpdateCount >= this.splitInitText.length) {\n            clearInterval(this.textUpdateInterval)\n          }\n        }, 10\n      )\n    }\n  }\n\n  getText(prevText, step) {\n    // TODO this can be a bit CPU heavy, so test it on some small power setting\n    const cipherKey = mod(this.props.cipherKey, ALPHABET_LEN)\n    const text = this.props.text || ''\n    const cursor = \"_\"\n    if (!prevText) {\n      return decipher(cipherKey, text)\n    }\n    // already deciphered with new key, the last two symbols presumably are '_ ' so we cut them off\n    let preTextLen = this.splitInitText.slice(0, step).reduce((acc, el) => acc + el.length, 0) + step - 2\n    preTextLen = Math.max(preTextLen, 0)\n    const preText = prevText.slice(0, preTextLen)\n\n    // new text to decipher, sometimes there's a race condition and the step is\n    // larger than number of words in text, no additional actions are required in that case,\n    // just return the previous text\n    let textToDecipher = this.splitInitText[step]\n    if (!textToDecipher) {\n      return prevText\n    }\n    // the last letter of the last word from previuos step to replace '_'\n    const lastPreWord = this.splitInitText[step - 1]\n    if (lastPreWord) {\n      textToDecipher = lastPreWord[lastPreWord.length - 1] + ' ' + textToDecipher\n    }\n    let newText = decipher(cipherKey, textToDecipher)\n    newText = newText.slice(0, newText.length - 1) + cursor + ' '\n    const postText = prevText.slice(preTextLen + newText.length, prevText.length)\n    return preText + newText + postText\n  }\n\n  render() {\n    const cipherKey = mod(this.props.cipherKey, ALPHABET_LEN)\n    return <div className='cipher-widget__body'>\n      <div className=\"cipher-widget__subst-title\">\n        <CaesarBreakKeyControls {...this.props}/>\n      </div>\n      <table className='cipher-widget__subst-table'>\n        <tbody>\n          <tr>\n            <td className=\"cipher-widget__subst-label\">шифротекст: </td>\n            <td className=\"cipher-widget__text cipher-widget__text_cipher\">{ALPHABET}</td>\n          </tr>\n          <tr>\n            <td className=\"cipher-widget__subst-label \">відкритий текст: </td>\n            <td className=\"cipher-widget__text cipher-widget__text_plain\">\n              {ALPHABET.slice(cipherKey) + ALPHABET.slice(0, cipherKey)}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div className=\"cipher-widget__secret-text-cont\">\n        <p className={\n          \"cipher-widget__secret-text cipher-widget__text \" +\n          (cipherKey === 0? 'cipher-widget__text_cipher' : 'cipher-widget__text_plain')\n        }>\n          {this.state.text}\n        </p>\n      </div>\n    </div>\n  }\n}","export const caesarText = \"Твоя криптографічна атака виявилася успішною! Ти тепер криптоаналітик першого рівня і можеш легко зламати найпростіші шифри, такі як Цезарів. Здається, ти думаєш, що наскільки простесенькі методи ні для чого серйозного вже ніхто не використовує. Але це не так, люди можуть робити дуже серйозні справи дуже по-дурному. Наприклад, дві тисячі одинадцятого року у Британії один чоловік планував теракт і йому треба було секретно переписуватися зі спільниками. Він дещо знав про криптографію, але не довіряв жодним сучасним методам, бо вони, на його думку, занадто добре всім відомі. Тому він «винайшов» власний спосіб — шифр Цезаря в ексель документі. Зайве казати, що все його листування перехопили і легко зламали, терактові запобігли, а самого чоловіка посадили до тюрми. Якби всі поганці покладалися у своїх лихих планах на найпростіші шифри, боротьба зі злочинністю була би значно простішою. Далі ми говоритимемо про просунутіші алгоритми, тому не повідомляй ніяким потенційним терористам ключового слова одноалфавіт, яке дасть тобі доступ до наступного розділу.\"","import React from 'react'\nimport greeksImgUrl from '../img/ancient_greeks_bold.png'\nimport hairImgUrl from '../img/ancient_greeks_hair.png'\nimport './SteganographyWidget.css'\n\nconst IMG_SIZE = {\n  width: 915,\n  height: 338,\n}\n\n\nfunction redraw(context, img, width, height) {\n  context.drawImage(img, 0, 0, width, height)\n  context.globalCompositeOperation = 'destination-out'\n\n  context.strokeStyle = 'green'\n  context.lineJoin = \"round\";\n  context.lineWidth = 12;\n}\n\n\nexport default class SteganographyWidget extends React.Component {\n  constructor(props) {\n    super(props)\n    this.canvasRef = React.createRef()\n    this.hairImgRef = React.createRef()\n\n    this.paintOn = false\n    this.width = this.props.width\n    this.height = this.width / IMG_SIZE.width * IMG_SIZE.height\n\n    this.startDrawing = this.startDrawing.bind(this)\n    this.stopDrawing = this.stopDrawing.bind(this)\n    this.continueDrawing = this.continueDrawing.bind(this)\n    this.loadCanvas = this.loadCanvas.bind(this)\n  }\n\n  loadCanvas() {\n    const canvas = this.canvasRef.current\n    this.context = canvas.getContext('2d')\n    redraw(\n      this.context, this.hairImgRef.current, this.width, this.height\n    )\n  }\n\n  startDrawing(e) {\n    const bbox = e.target.getBoundingClientRect()\n    const mouseX = e.clientX - bbox.x;\n    const mouseY = e.clientY - bbox.y;\n    this.paintOn = true;\n    this.context.moveTo(mouseX, mouseY)\n  }\n\n  stopDrawing(e) {\n    this.paintOn = false\n  }\n\n  continueDrawing(e) {\n    if (this.paintOn) {\n      const bbox = e.target.getBoundingClientRect()\n      const mouseX = e.clientX - bbox.x;\n      const mouseY = e.clientY - bbox.y;\n      this.context.lineTo(mouseX, mouseY)\n      this.context.closePath()\n      this.context.stroke()\n      this.context.moveTo(mouseX, mouseY)\n    }\n  }\n  render() {\n    return (\n      <div className=\"staganography-widget\"\n        style={{width: this.width, height: this.height}}>\n       <img\n         className=\"steganography-widget__background-img\"\n         width={this.width} height={this.height}\n         src={greeksImgUrl}\n         alt=\"два греки, яким можна стерти волосся, щоб побачити надписи «бунтуй» і «слухаюсь» на їхніх головах\" />\n       <img\n         className=\"steganography-widget__hidden_img\"\n         src={hairImgUrl} ref={this.hairImgRef}\n         width={this.width} height={this.height}\n         onLoad={e=>this.loadCanvas()} alt=\"\"/>\n       <canvas\n         className=\"steganography-widget__canvas\"\n         ref={this.canvasRef} width={this.width}\n         height={this.height}\n         onMouseDown={this.startDrawing}\n         onMouseUp={this.stopDrawing}\n         onMouseLeave={this.stopDrawing}\n         onMouseMove={this.continueDrawing}\n       />\n    </div>\n    )\n  }\n}","import React from 'react'\n\nimport CaesarCipherWidget from '../components/CaesarWidget';\nimport CaesarBreakWidget from '../components/CaesarBreakWidget'\nimport { caesarText } from './cipherTexts'\nimport { encipher } from '../ciphers/caesar'\nimport SteganographyWidget from '../components/SteganographyWidget'\n\nexport default function ChapterOne() {\n  return (\n<article>\n<h1>\n  <span>Історія таємного письма: <br/></span>\n  <span>як зберегти свої секрети <br/></span>\n  <span>і викрасти чужі</span>\n</h1>\n\n<summary className=\"main-text\">\n  Сивочолі мужі минулого зрекли про секрети немало гарних висловів, зміст більшості з\n  яких зводиться до двох речей:\n  по-перше, свої таємниці не слід довіряти навіть найближчим друзям,\n  по-друге, взагалі не треба їх мати (секрети, не друзів).\n  Але, сивочолі мужі, як же бути з паролем до Інстаграму чи Твіттеру?\n  Хоч ці сервіси й не є нашими найліпшими друзями,\n  а треба повідомляти їм свій секретний пароль при кожному вході.\n  Багато таємниць створені саме для того, щоби ділилися ними з кимось конкретним\n  і часто це доводиться робити письмово.\n  Тому люди придумали багато хитрих методів,\n  як писати так, щоб зрозуміли тільки ті, кому повідомлення адресоване.\n  Та охочих бути в курсі чужих таємниць теж не бракувало,\n  тому вони додумалися, як обхитрити ці хитрі методи.\n  Тоді вигадали ще хитріші методи. Тоді їх перемогли ще хитрішими способами.\n  Такі змагання «хто кого» не припинилися і досі.\n  У&nbsp;цій статті ми познайомимося із кількома історичними методами таємного письма,\n  дізнаємося, як вони працюють, хто їх використовував, і найважливіше&nbsp;— де їхні\n  слабкі місця, по яких можна завдати руйнівного удару.\n</summary>\n\n<p className=\"main-text\">\n  Давним-давно, за півтисячоліття до нашої ери, одному чоловікові на ім’я Гістіей\n  треба було послати таємне повідомлення своєму небожеві Аристагору,\n  щоби підбурити того до повстання.\n  Справа нехитра, взяв він свого найвідданішого раба,\n  поголив йому голову, витатуював там те, що хотів сказати,\n  зачекав, поки волосся відросте і послав його у подорож на кілька тисяч кілометрів.\n  Добравшися до Аристагора раб сказав, так і так, я від Гістіея, поголи мені голову.\n  Це був один із перших задокументованих випадків успішної передачі секретного послання.\n</p>\n\n<div className=\"command\">\n  <p className=\"command__phrase\">\n    Клацни і совгай мишкою, щоб стерти зачіски цих греків і побачити таємний діалог на їхніх головах.\n  </p>\n\n  <SteganographyWidget width={800} />\n</div>\n\n<p className=\"main-text\">\n  У Гістіеєвого методу багато недоліків, особливо добре їх, певне, відчув той раб.\n  А з технічного боку найбільша його слабкість в тому,\n  що він намагається приховати не зміст послання, а сам факт його існування.\n  Вороги Гістіея мали би просто не здогадатися, що секретний напис&nbsp;— на голові посланця.\n  У багатьох випадках вдавати, що ніякого секретного листування не відбувається&nbsp;— не варіант.\n  Тому треба зробити так, щоб навіть, якщо вороги доберуться до листа,\n  вони не змогли його зрозуміти.\n  Іншими словами, текст треба <em>зашифрувати</em>&nbsp;— перетворити його в якусь тарабарщину,\n  яку зможе прочитати тільки людина, яка має секретний ключ.\n</p>\n\n<h2>Шифр Цезаря</h2>\n\n<p className=\"main-text\">\n  Подивімося крок за кроком, як працює шифрування.\n  Тільки поточні досягнення криптографії&nbsp;— науки про секретний обмін інформацією&nbsp;— надзвичайно складні,\n  тому почнемо з простого древнього методу&nbsp;— шифру Цезаря.\n  Його використовував, звичайно, Цезар&nbsp;— правитель Стародавнього Риму.\n  Скажімо, одного дня він вирішив повідомити оратору й адвокату Цицеронові таке:\n  <span className='msg-quote'> «Прочитав твою книжку&nbsp;— чудово написано!»</span>.\n  Він бере цей текст, і кожну букву в ньому заміняє на ту,\n  що стоїть в алфавіті на три позиції далі від неї: А&nbsp;— на Г, Б&nbsp;—&nbsp;на Ґ і так далі;\n  третя з кінця буква Ь заміниться на першу&nbsp;— А, так наче абетка замкнена у коло.\n</p>\n\n<div className=\"command\">\n  <p className=\"command__phrase\">\n    Вистав число 3 у полі «ключ», щоб побачити, як виглядає Цезареве повідомлення зашифрованим.\n  </p>\n\n  <CaesarCipherWidget title='Метод Цезаря: Шифрування'\n    text='прочитав твою книжку&nbsp;— чудово написано!'\n    successKey={3} />\n</div>\n\n\n<p className=\"main-text\">\n  Тепер Цезар може надіслати цю безглузду тарабарщину Цицерону.\n  Але той не розгубиться, бо знає, чого чекати від Цезаря.\n  Він може провести зворотну операцію&nbsp;— взяти кожну літеру зашифрованого повідомлення\n  і зсунути її в абетці на три позиції назад.\n  Так він отримає початкове повідомлення і втішиться, що Цезар так високо оцінив його книжку.\n  Свою відповідь він може зашифрувати тим самим способом.\n</p>\n\n<div className=\"command\">\n<p className=\"command__phrase\">\n  Використай ключ 3, щоб прочитати Цицеронову відповідь.\n</p>\n\n<CaesarCipherWidget title='Метод Цезаря: Розшифрування'\n  text='жвнцб, в фхгугдфв' successKey={3} reverse />\n</div>\n\n<p className=\"main-text\">\n  Початкове повідомлення, як то <span className='msg-quote'>«Прочитав твою книжку&nbsp;— чудово написано!»</span>,\n  називається <em>відкритим текстом</em>, зашифроване&nbsp;— <em>шифротекстом</em>.\n  Послідовність дій, яку треба виконати,\n  щоби перетворити перше повідомлення у друге звуть <em>алгоритмом шифрування</em>.\n  Крім самого тексту він використовує <em>ключ</em>&nbsp;— у цьому випадку число три.\n  Ключ може змінюватися без зміни алгоритму, наприклад, якби Цезар шифрував ключем 5,\n  то всі букви слід було би зсовувати на п’ять позицій в алфавіті.\n  Отримувач повідомлення, щоби прочитати його,\n  повинен знати ключ і <em>алгоритм розшифрування</em>&nbsp;—\n  послідовність дій зворотну до шифрування.\n  Пару алгоритмів шифрування/дешифрування називають <em>шифром</em>.\n</p>\n\n<p className=\"main-text\">\n  Отже, двоє людей, які хочуть таємно переписуватися, мають зустрітися,\n  домовитися про шифр і ключ, а тоді вже спокійно обмінюватися засекреченими листами, коли треба.\n  Звісно, ключ слід тримати у найстрогішій таємниці.\n  Краще, щоб вороги не знали також і про вибраний шифр.\n  Але якщо він надійний, то це знання не повинно допомогти їм докопатися до суті повідомлення.\n  Єдиним ключем до розшифрування має бути, власне, ключ.\n</p>\n\n<p className=\"main-text\">\n  Шифр Цезаря&nbsp;— ненадійний.\n  Зловмисникам вистачить наймінімальніших знань з криптоаналітики&nbsp;—\n  розділу криптографії про злом шифрів, або навіть просто клепки в голові, щоб розгадати його.\n  Це тому, що шифр Цезаря можна атакувати найпростішим способом&nbsp;— <em>«грубою силою»</em>.\n  Для цього слід узяти всі можливі ключі і пробувати кожен підряд,\n  поки не вийде щось схоже на людську мову.\n  Варіантів не так вже й багато&nbsp;— на один менше, ніж довжина абетки.\n  Навіть вручну&nbsp;— це раз плюнути, а з допомогою комп’ютера, то як плюнути одну тисячну разу.\n</p>\n\n<div className=\"command\">\n  <p className=\"command__phrase\">\n    Спробуй підібрати ключа до такого тексту:\n  </p>\n\n  <CaesarBreakWidget title='Метод Цезаря: Злом' text={encipher(5, caesarText.toLowerCase())}\n    successKey={5} />\n</div>\n</article>\n)}","import React, { Component } from 'react';\nimport './App.css';\n\nimport ChapterOne from './content/ChapterOne'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <ChapterOne />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}