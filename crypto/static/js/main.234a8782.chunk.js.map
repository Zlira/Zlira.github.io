{"version":3,"sources":["LevelsContex.js","LocalStorage.js","components/LevelIndicator/index.js","ciphers/alphabet.js","ciphers/mathHelpers.js","components/SuccessIndicator.js","components/CipherWidget.js","ciphers/caesar.js","components/CaesarTextField.js","components/CaesarKeyControls.js","components/CaesarWidget.js","components/SubstTable.js","components/CaesarBreakWidget.js","content/cipherTexts.js","components/SteganographyWidget.js","components/NextChapterLink.js","components/NavigationContainer/Modal.js","components/NavigationContainer/index.js","content/ChapterOne.js","ciphers/monoalphabet.js","components/MonoalphabetWidget.js","content/letterFrequency.js","components/MonoalphabetBreakWidget/LetterFrequencies.js","components/MonoalphabetBreakWidget/PairingSwitches.js","components/MonoalphabetBreakWidget/Hints.js","components/MonoalphabetBreakWidget/index.js","components/KaterineDialog.js","content/ChapterTwo.js","content/ChapterThree.js","App.js","serviceWorker.js","index.js","img/icons/key.svg","img/icons/key_inactive.svg","img/ancient_greeks_bold.png","img/ancient_greeks_hair.png","img/katherine_ferdinand.png"],"names":["LevelsContext","React","createContext","levelsPassed","addPassedLevel","clearPassedLevels","getFromStorage","key","savedResult","window","localStorage","getItem","JSON","parse","_unused","putIntoStorage","value","stringify","Object","defineProperty","LevelIndicator","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","resetLevels","bind","assertThisInitialized","context","levels","map","l","i","react_default","a","createElement","LevelIcon","index","active","className","title","onClick","Component","_ref","src","desc","concat","keyImg","inactiveKeyImg","alt","contextType","ALPHABET","ALPHABET_LEN","length","ALPHABET_DICT","objectSpread","split","REVERSE_DICT","entries","alphabet_i","alphabet_arr","alphabet_ref3","alphabet_ref2","slicedToArray","FULL_ALPHADICT","mod","n","m","SuccessIndicator","isSuccessClass","isSuccess","style","position","CipherWidget","state","updateCipherKey","e","setState","target","success","parseInt","successKey","renderBody","cipherKey_","updateCipherKey_","encipher","openText","letter","join","decipher","cipherText","trimKeyDifference","keyDiff","Math","abs","sign","CipherTextField","animating","animationTimeout","undefined","prevCipherKey","cipherKey","prevProps","prevState","snapshot","_this2","setTimeout","clearTimeout","_this$props","text","reverse","vals","toConsumableArray","prevKey","currKey","valNum","firstVal","min","Array","keys","v","getIntermediateKeys","textsNum","texts","EnicpheredText","CipherKey","moveCoef","styleNotAnimating","transform","transition","Fragment","_ref$className","toString","padStart","_ref2","_ref2$className","textClassName","CaesarKeyLabel","htmlFor","CaesarBreakKeyLabel","CaesarKeyControls","label","CipherKeyControls","assign","CaesarBreakKeyControls","type","name","onChange","CaesarCipherWidget","src_components_CipherWidget","CaesarBody","_ref3","CaesarTextField_CipherTextField","textWithHighlight","slice","SubstTable","cipherAlphabet","openAlphabet","highlightIndex","CaesarBreakWidget","CaesarBreakWidget_CeasarBreakBody","CeasarBreakBody","getText","splitInitText","clearInterval","textUpdateInterval","textUpdateCount","setInterval","prevText","step","preTextLen","reduce","acc","el","max","preText","textToDecipher","lastPreWord","newText","caesarText","monoalphabetText","IMG_SIZE","width","height","SteganographyWidget","canvasRef","createRef","hairImgRef","paintOn","startDrawing","stopDrawing","continueDrawing","loadCanvas","img","canvas","current","getContext","drawImage","globalCompositeOperation","strokeStyle","lineJoin","lineWidth","bbox","getBoundingClientRect","mouseX","clientX","x","mouseY","clientY","y","moveTo","lineTo","closePath","stroke","greeksImgUrl","hairImgUrl","ref","onLoad","onMouseDown","onMouseUp","onMouseLeave","onMouseMove","NextChapterLink","userKeyword","touched","handleSubmit","handleInput","keywordIsCorrect","level","history","push","link","trim","toLowerCase","keyword","placeholder","onKeyUp","keyCode","withRouter","Modal","contentRef","handleClickOutside","event","contains","handleStay","document","addEventListener","removeEventListener","handleLeave","NavigationContrainer","modalShown","goForward","handleForward","showModal","hideModal","linkForward","children","linkBack","Modal_Modal","ChapterOne","NavigationContainer","SteganographyWidget_SteganographyWidget","src_components_NextChapterLink","KEY_1","KEY_2","makeSubstDict","arguments","substDict","_cipher","monoalphabetWidget","initText","handleTextChange","isCipher","highlightLetter","includes","MonoalphabetInput","handleChange","isPlain","rows","monoAlphBreakText","0","freq","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","Chapter2Text","32","LetterFreques","_React$PureComponent","apply","inherits","createClass","lettersInfo","upsidedown","isPlainText","hightlightLetter","selectedLetter","hightlightedLetter","letters","LetterFreq","isSelected","isHighlighted","PureComponent","LetterFrequesDraggable","_React$PureComponent2","_this$props2","onDragEnd","lockedLetters","_loop","isLocked","react_beautiful_dnd_esm","draggableId","isDragDisabled","provided","innerRef","draggableProps","dragHandleProps","droppableId","direction","droppableProps","freqInd","LetterFrequencies_FreqIndicator","containerClassName","FreqIndicator","nextProps","_this$props3","freqR","round","bars","barClassName","x1","x2","y1","y2","toFixed","PairingSwitches","paired","handleClick","reset","switches","isPaired","PairingSwitch","Hints","conditions","$","%","@","h","j","k","z","^","g","o","getViolatedConditions","hintConditions","violated","_arr","_i","val","mergeHintCondsTill","hintIndex","hint","conds","getHintButtonClasses","inactive","defualtClass","HintWarning","HintContainer","showWarning","showUnmetConditions","showNextHint","startShowingUnmetConds","currentStepIsComplete","increment","num","violatedConditions","condsViolated","violatedConditionsEl","_ref4","_ref5","Conditions","MonoalphabetBreakWidget","getInitState","toggleLettePairing","processText","setHighlighted","reorderRefFrequency","getSubstDict","setSelectedLetter","letterCount","pairings","fill","refLetterFreq","highlightedLetter","selectedRefLetter","selectedTextLetter","letterType","newPairings","result","destination","source","movingLetters","fixedLetters","movedLetter","destIndext","moveLettersList","sort","first","second","newRefLetterFreq","pop","keyIndexes","filter","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","getClass","correctDict","values","_i2","_this3","successClass","Hints_HintContainer","MonoalphabetBreakWidget_OneLetterInput","letterSetter","bottom","LetterFrequencies_LetterFreques","PairingSwitches_PairingSwitches","LetterFrequencies_LetterFrequesDraggable","CipherText","currLetter","currClass","prevClass","spans","currSpanText","OneLetterInput","_this4","KaterineDialog","katerineDialogImg","draggable","ChapterTwo","MonoalphabetWidget_monoalphabetWidget","KaterineDialog_KaterineDialog","Chapter2LetterFreques","components_MonoalphabetBreakWidget_MonoalphabetBreakWidget","ChapterThree","fontSize","fontWeight","color","textAlign","marginTop","App","initLevelsPassed","updatedPassedLevels","Provider","components_LevelIndicator_LevelIndicator","Switch","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","HashRouter","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.234a8782.chunk.js","sourcesContent":["import React from 'react'\n\n\nexport const LevelsContext = React.createContext({\n  levelsPassed: [false, false, false],\n  addPassedLevel: () => {},\n  clearPassedLevels: () => {},\n})","export function getFromStorage(key) {\n  const savedResult = window.localStorage.getItem(key)\n  if (!savedResult) {return}\n  try {\n    return JSON.parse(savedResult)[key]\n  } catch {\n    return\n  }\n}\n\nexport function putIntoStorage(key, value) {\n  window.localStorage[key] = JSON.stringify({[key]: value})\n}","import React from 'react'\n\nimport {LevelsContext} from '../../LevelsContex'\nimport keyImg from '../../img/icons/key.svg'\nimport inactiveKeyImg from '../../img/icons/key_inactive.svg'\nimport './LevelIndicator.css'\n\n\nexport default class LevelIndicator extends React.Component {\n  static contextType = LevelsContext\n  constructor(props) {\n    super(props)\n\n    this.resetLevels = this.resetLevels.bind(this)\n  }\n\n  resetLevels() {\n    this.context.clearPassedLevels()\n  }\n\n  render() {\n    const levels = this.context.levelsPassed.map(\n      (l, i) => <LevelIcon key={i} index={i + 1} active={l}/>\n    )\n    return <div className='level-indicator'>\n      <p className='level-indicator__reset-btn'\n        title='скинути пройдені рівні'\n        onClick={this.resetLevels}>+</p>\n      {levels}\n    </div>\n  }\n}\n\n\nfunction LevelIcon({active, index}) {\n  // todo add title and more detialed alt\n  let src, desc = `рівень №${index}: `\n  if (active) {\n    src = keyImg\n    desc = desc + 'завершений'\n  } else {\n    src = inactiveKeyImg\n    desc = desc + 'непройдений'\n  }\n  return <img src={src} alt={desc} title={desc} className='level-indicator__icon'/>\n}","export const ALPHABET = 'абвгґдеєжзиіїйклмнопрстуфхцчшщьюя'\nexport const ALPHABET_LEN = ALPHABET.length\nconst ALPHABET_DICT = {...ALPHABET.split('')}\nconst REVERSE_DICT = {}\nfor (const [key, val] of Object.entries(ALPHABET_DICT)) {\n    REVERSE_DICT[val] = key\n}\nexport const FULL_ALPHADICT = {...ALPHABET_DICT, ...REVERSE_DICT}","export function mod(n, m) {\n  return ((n % m) + m) % m;\n}\n\n\nexport function placeWithinRange(num, min, max) {\n  return Math.max(min, Math.min(max, num))\n}","import React from 'react'\n\n\nexport default function SuccessIndicator({isSuccess}) {\n  const isSuccessClass = isSuccess? ' cipher-widget__success-indicator_is-success' : ''\n  return (\n    <div style={{position: 'relative'}}>\n      <div className={'cipher-widget__success-indicator' + isSuccessClass}></div>\n    </div>\n  )\n}","import React from 'react'\n\nimport { ALPHABET_LEN } from '../ciphers/alphabet'\nimport { mod } from '../ciphers/mathHelpers'\nimport SuccessIndicator from './SuccessIndicator'\nimport './CipherWidget.css'\n\n\nclass CipherWidget extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      key: 0\n    }\n    this.updateCipherKey = this.updateCipherKey.bind(this)\n  }\n\n  updateCipherKey(e) {\n    this.setState({\n      key: e.target.value\n    })\n  }\n\n  render() {\n    const cipherKey = mod(parseInt(this.state.key || 0), ALPHABET_LEN)\n    const success = cipherKey === this.props.successKey\n    return (\n      <section className={\n          'cipher-widget ' + this.props.className\n          + (success? ' cipher-widget_success' : '')\n        }>\n        <SuccessIndicator isSuccess={success} />\n        <h3 className='cipher-widget__title'>{this.props.title}</h3>\n        {this.props.renderBody({\n          cipherKey_: this.state.key,\n          updateCipherKey_: this.updateCipherKey,\n        })}\n      </section>\n    )\n  }\n}\n\n\nexport default CipherWidget","import { mod } from './mathHelpers'\nimport { FULL_ALPHADICT, ALPHABET_LEN } from './alphabet'\n\nexport function encipher(key, openText) {\n  const res = openText\n    .split('')\n    .map(\n      letter => FULL_ALPHADICT[\n        mod((parseInt(FULL_ALPHADICT[letter]) + key), ALPHABET_LEN)\n      ] || letter\n    )\n    .join('')\n  return res\n}\n\nexport function decipher(key, cipherText) {\n  return encipher(-key, cipherText)\n}\n","import React from 'react'\n\nimport {ALPHABET_LEN} from '../ciphers/alphabet'\nimport { mod } from '../ciphers/mathHelpers'\nimport { encipher } from '../ciphers/caesar'\n\n\nfunction trimKeyDifference(keyDiff) {\n  // if keys are more than ALPHABET_LEN values apart there's no need to\n  // show ALL the intermediate values\n  return Math.abs(keyDiff) > ALPHABET_LEN\n    ? ALPHABET_LEN * Math.sign(keyDiff) + keyDiff % ALPHABET_LEN\n    : keyDiff\n}\n\nexport function getIntermediateKeys(prevKey, currKey) {\n  const valNum = Math.abs(trimKeyDifference(currKey - prevKey)) + 3\n  const firstVal = Math.min(prevKey, currKey) - 1\n  return [...Array(valNum).keys()].map(v => v + firstVal)\n}\n\n\n// todo refactor\nexport default class CipherTextField extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      animating: false,\n    }\n\n    this.animationTimeout = undefined\n    this.prevCipherKey = this.props.cipherKey\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.cipherKey === this.props.cipherKey) {\n      return\n    }\n    this.prevCipherKey = prevProps.cipherKey\n    this.setState({animating: false})\n    this.animationTimeout = setTimeout(\n      () => this.setState({animating: true}),\n      200\n    )\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.animationTimeout)\n  }\n\n  render() {\n    const {text, cipherKey, reverse} = this.props\n    const vals = [...getIntermediateKeys(this.prevCipherKey, cipherKey)]\n    const textsNum = vals.length\n    const texts = vals.map(\n      v =>\n        <EnicpheredText text={text} cipherKey={v} key={v} reverse={reverse}\n          className={v !== cipherKey? 'cipher-widget__text_is-neighbour' : ''}/>\n    )\n    const keys = vals.map(\n      v =>\n        <CipherKey cipherKey={v} key={v} reverse={reverse}\n          className={v !== cipherKey? 'cipher-widget__text_is-neighbour' : ''}/>\n    )\n    // todo move this logic to separate function and test it\n    const moveCoef = trimKeyDifference(this.prevCipherKey - cipherKey)\n    const styleNotAnimating = {\n      transform: moveCoef > 0\n        ? `translateY(calc(${-textsNum + 3} * 10px + ${-textsNum + 3} * 1em))`\n        : 'none'\n    }\n    const style = {\n      transform: moveCoef < 0\n        ? `translateY(calc(${moveCoef} * 10px + ${moveCoef} * 1em))`\n        : 'none',\n      transition: \"transform .6s\",\n    }\n    return  (\n    <>\n      <div className={'cipher-widget__key-column cipher-widget__column_sliding'}>\n        <div style={this.state.animating? style : styleNotAnimating}>\n          {keys}\n        </div>\n      </div>\n      <div className={'cipher-widget__text-column cipher-widget__column_sliding'}>\n        <div style={this.state.animating? style : styleNotAnimating}>\n          {texts}\n        </div>\n      </div>\n    </>\n    )\n  }\n}\n\nfunction CipherKey({cipherKey, reverse, className=''}) {\n  if (reverse) {\n    cipherKey = ALPHABET_LEN - cipherKey\n    className = className + ' cipher-widger__text_is-reverse'\n  }\n  cipherKey = mod(cipherKey, ALPHABET_LEN)\n  return <p className={'cipher-widget__text ' + className}>\n    {cipherKey.toString().padStart(2, 0)}\n  </p>\n}\n\nfunction EnicpheredText({text, cipherKey, reverse, className=''}) {\n  cipherKey = mod(cipherKey, ALPHABET_LEN)\n  const textClassName = reverse\n    ? 'cipher-widget__text_plain'\n    : 'cipher-widget__text_cipher'\n  return (\n    <p className={'cipher-widget__text ' + className + ' ' + textClassName}>\n      {encipher(cipherKey, text)}\n    </p>\n  )\n}\n","import React from 'react'\n\nfunction CaesarKeyLabel() {\n  return <label htmlFor=\"key\" className='cipher-widget__label'>ключ:</label>\n}\n\n\nfunction CaesarBreakKeyLabel() {\n  return (\n    <label htmlFor='key'\n    className='cipher-widget__label cipher-widget__label_break'>\n      Таблиця заміни з ключем:\n    </label>\n  )\n}\n\n\nexport function CaesarKeyControls(props) {\n  const label = <CaesarKeyLabel/>\n  return (\n    <div className='cipher-widget__control-column'>\n      <CipherKeyControls {...props} label={label}/>\n    </div>\n  )\n}\n\nexport function CaesarBreakKeyControls(props) {\n  const label = <CaesarBreakKeyLabel/>\n  return (\n    <div>\n      <CipherKeyControls {...props} label={label} />\n    </div>\n  )\n}\n\n\nfunction CipherKeyControls({cipherKey, updateCipherKey, label}) {\n  return (\n      <div className='cipher-widget__key-form'>\n        {label}\n        <input type=\"number\" name=\"key\"\n            className='cipher-widget__key-input'\n            value={cipherKey}\n            onChange={updateCipherKey} />\n      </div>\n  )\n}","import React from 'react'\n\nimport CipherWidget from './CipherWidget'\nimport CipherTextField from './CaesarTextField'\nimport {CaesarKeyControls} from './CaesarKeyControls'\n\n\nexport default function CaesarCipherWidget({title, text, cipherKey, successKey, reverse}) {\n  const renderBody = ({cipherKey_, updateCipherKey_}) => {\n    return (\n      <CaesarBody text={text} reverse={reverse}\n        cipherKey={cipherKey_} updateCipherKey={updateCipherKey_}/>\n    )\n  }\n  return <CipherWidget renderBody={renderBody} cipherKey={cipherKey} title={title}\n           className={reverse? 'cipher-widget_decipher' : 'cipher-widget_enicpher'}\n           successKey={successKey}/>\n}\n\n\nfunction CaesarBody({text, cipherKey, updateCipherKey, reverse}) {\n  const textClassName = reverse\n    ? 'cipher-widget__text_cipher'\n    : 'cipher-widget__text_plain'\n  return (\n    <div className='cipher-widget__body'>\n      <div className='cipher-widget__ref-section'>\n        <div className='cipher-widget__control-column'>\n          <p className='cipher-widget__label'>\n            {reverse? 'шифротекст:' : 'текст:'}\n          </p>\n        </div>\n        <div className='cipher-widget__key-column'></div>\n        <div className='cipher-widget__text-column'>\n          <p className={'cipher-widget__text ' + textClassName}>{text}</p>\n        </div>\n      </div>\n      <div className='cipher-widget__work-section'>\n        <CaesarKeyControls cipherKey={cipherKey} updateCipherKey={updateCipherKey}/>\n        <CipherTextField text={text}\n          cipherKey={(reverse? -parseInt(cipherKey) : parseInt(cipherKey)) || 0}\n          reverse={reverse}\n        />\n      </div>\n    </div>\n  )\n}\n\n","import React from 'react'\n\n\nfunction textWithHighlight(text, index) {\n  index = parseInt(index)\n  return <>\n    {text.slice(0, index)}\n    <span className=\"cipher-widget__text_higlighted\">{text[index]}</span>\n    {text.slice(index + 1)}\n  </>\n}\n\nexport default function SubstTable({cipherAlphabet, openAlphabet, highlightIndex}) {\n  if (highlightIndex) {\n    openAlphabet = textWithHighlight(openAlphabet, highlightIndex)\n    cipherAlphabet = textWithHighlight(cipherAlphabet, highlightIndex)\n  }\n  return (\n    <table className='cipher-widget__subst-table'>\n      <tbody>\n        <tr>\n          <td className=\"cipher-widget__subst-label \">відкритий текст: </td>\n          <td className=\"cipher-widget__text cipher-widget__text_plain\">\n            {openAlphabet}\n          </td>\n        </tr>\n        <tr>\n          <td className=\"cipher-widget__subst-label\">шифротекст: </td>\n          <td className=\"cipher-widget__text cipher-widget__text_cipher\">\n            {cipherAlphabet}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}","import React from 'react'\n\nimport { ALPHABET, ALPHABET_LEN } from '../ciphers/alphabet'\nimport { decipher } from '../ciphers/caesar'\nimport { mod } from '../ciphers/mathHelpers'\nimport CipherWidget from './CipherWidget'\nimport { CaesarBreakKeyControls } from './CaesarKeyControls'\nimport SubstTable from './SubstTable'\n\n\nexport default function CaesarBreakWidget({title, text, successKey}){\n  const renderBody = ({\n    updateCipherKey_, cipherKey_\n  }) => <CeasarBreakBody cipherKey={cipherKey_} updateCipherKey={updateCipherKey_} text={text}/>\n  return (\n      <CipherWidget title={title} renderBody={renderBody} successKey={successKey} />\n  )\n}\n\n\nclass CeasarBreakBody extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.getText = this.getText.bind(this)\n    this.state = {\n      text: this.getText()\n    }\n    this.splitInitText = this.props.text.split(' ')\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.textUpdateInterval)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.cipherKey !== prevProps.cipherKey) {\n      const cipherKey = mod(prevProps.cipherKey, ALPHABET_LEN)\n      this.setState({text: decipher(cipherKey, this.props.text)})\n      this.textUpdateCount = 0\n      clearInterval(this.textUpdateInterval)\n      this.textUpdateInterval = setInterval(\n        () => {\n          this.setState(prevState => ({text: this.getText(prevState.text, this.textUpdateCount)}))\n          this.textUpdateCount = this.textUpdateCount + 1;\n          if (this.textUpdateCount >= this.splitInitText.length) {\n            clearInterval(this.textUpdateInterval)\n          }\n        }, 10\n      )\n    }\n  }\n\n  getText(prevText, step) {\n    // TODO this can be a bit CPU heavy, so test it on some small power setting\n    const cipherKey = mod(this.props.cipherKey, ALPHABET_LEN)\n    const text = this.props.text || ''\n    const cursor = \"_\"\n    if (!prevText) {\n      return decipher(cipherKey, text)\n    }\n    // already deciphered with new key, the last two symbols presumably are '_ ' so we cut them off\n    let preTextLen = this.splitInitText.slice(0, step).reduce((acc, el) => acc + el.length, 0) + step - 2\n    preTextLen = Math.max(preTextLen, 0)\n    const preText = prevText.slice(0, preTextLen)\n\n    // new text to decipher, sometimes there's a race condition and the step is\n    // larger than number of words in text, no additional actions are required in that case,\n    // just return the previous text\n    let textToDecipher = this.splitInitText[step]\n    if (!textToDecipher) {\n      return prevText\n    }\n    // the last letter of the last word from previuos step to replace '_'\n    const lastPreWord = this.splitInitText[step - 1]\n    if (lastPreWord) {\n      textToDecipher = lastPreWord[lastPreWord.length - 1] + ' ' + textToDecipher\n    }\n    let newText = decipher(cipherKey, textToDecipher)\n    newText = newText.slice(0, newText.length - 1) + cursor + ' '\n    const postText = prevText.slice(preTextLen + newText.length, prevText.length)\n    return preText + newText + postText\n  }\n\n  render() {\n    const cipherKey = mod(this.props.cipherKey, ALPHABET_LEN)\n    const openAlphabet = ALPHABET.slice(cipherKey) + ALPHABET.slice(0, cipherKey)\n    return <div className='cipher-widget__body'>\n      <div className=\"cipher-widget__subst-title\">\n        <CaesarBreakKeyControls {...this.props}/>\n      </div>\n      <SubstTable openAlphabet={openAlphabet} cipherAlphabet={ALPHABET}/>\n      <div className=\"cipher-widget__secret-text-cont\">\n        <p className={\n          \"cipher-widget__secret-text cipher-widget__text \" +\n          (cipherKey === 0? 'cipher-widget__text_cipher' : 'cipher-widget__text_plain')\n        }>\n          {this.state.text}\n        </p>\n      </div>\n    </div>\n  }\n}","export const caesarText = \"Твоя криптографічна атака виявилася успішною! Ти тепер криптоаналітик першого рівня і можеш легко зламати найпростіші шифри, такі як Цезарів. Здається, ти думаєш, що настільки простесенькі методи ні для чого серйозного вже ніхто не використовує. Але це не так, люди можуть робити найсерйозніші справи дуже по-дурному. Наприклад, дві тисячі одинадцятого року у Британії один чоловік планував теракт, і йому треба було секретно переписуватися зі спільниками. Він дещо знав про криптографію, але не довіряв жодним сучасним методам, бо вони, на його думку, занадто добре всім відомі. Тому він «винайшов» власний спосіб — шифр Цезаря в ексель документі. Зайве казати, що все його листування перехопили і легко зламали, терактові запобігли, а самого чоловіка посадили до тюрми. Якби всі поганці покладалися у своїх лихих планах на найпростіші шифри, боротьба зі злочинністю була би значно простішою. Далі ми говоритимемо про просунутіші алгоритми, тому не повідомляй ніяким потенційним терористам ключового слова одноалфавіт, яке дасть тобі доступ до наступного розділу.\"\nexport const monoalphabetText = \"Молодець, тепер ти криптоаналітик другого рівня. Метод, яким зашифрований цей текст, має ряд недоліків, яких можна було би легко позбутися. Найпростіший спосіб трохи заплутати можливого зломника — повикидати усі пробіли і розділові знаки. Так буде значно важче зрозуміти межі слів. А шифрувальники Європи доби Відродження винайшли багато інших хитрощів — впроваджували списки кодових слів чи символів, якими заміняли найважливіші поняття, наприклад, назви міст, дат, операцій та імена людей. Ключі шифрування доповнювали «пустими» знаками, які нічого не означають, шифрувальники просто розбавляли ними значущі символи, щоб збити з пантелику зломників. Для найпоширеніших букв в алфавіті придумували кілька різних замінників, які треба було використовувати почергово, аби не давати зачіпок для частотного аналізу. Але кожна поважна держава мала своїх криптоаналітиків, які знову і знову зламували найважливіші шифри ворогів, та й союзників. У цей час кілька гарно освічених любителів винайшли чудовий новий спосіб засекречення, який довго вважався цілком незламним, аж поки його не зламали. Поліалфавіт — слово-ключ до наступного розділу.\"","import React from 'react'\nimport greeksImgUrl from '../img/ancient_greeks_bold.png'\nimport hairImgUrl from '../img/ancient_greeks_hair.png'\nimport './SteganographyWidget.css'\n\nconst IMG_SIZE = {\n  width: 915,\n  height: 338,\n}\n\n\nfunction redraw(context, img, width, height) {\n  context.drawImage(img, 0, 0, width, height)\n  context.globalCompositeOperation = 'destination-out'\n\n  context.strokeStyle = 'green'\n  context.lineJoin = \"round\";\n  context.lineWidth = 12;\n}\n\n\nexport default class SteganographyWidget extends React.Component {\n  constructor(props) {\n    super(props)\n    this.canvasRef = React.createRef()\n    this.hairImgRef = React.createRef()\n\n    this.paintOn = false\n    this.width = this.props.width\n    this.height = this.width / IMG_SIZE.width * IMG_SIZE.height\n\n    this.startDrawing = this.startDrawing.bind(this)\n    this.stopDrawing = this.stopDrawing.bind(this)\n    this.continueDrawing = this.continueDrawing.bind(this)\n    this.loadCanvas = this.loadCanvas.bind(this)\n  }\n\n  loadCanvas() {\n    const canvas = this.canvasRef.current\n    this.context = canvas.getContext('2d')\n    redraw(\n      this.context, this.hairImgRef.current, this.width, this.height\n    )\n  }\n\n  startDrawing(e) {\n    const bbox = e.target.getBoundingClientRect()\n    const mouseX = e.clientX - bbox.x;\n    const mouseY = e.clientY - bbox.y;\n    this.paintOn = true;\n    this.context.moveTo(mouseX, mouseY)\n  }\n\n  stopDrawing(e) {\n    this.paintOn = false\n  }\n\n  continueDrawing(e) {\n    if (this.paintOn) {\n      const bbox = e.target.getBoundingClientRect()\n      const mouseX = e.clientX - bbox.x;\n      const mouseY = e.clientY - bbox.y;\n      this.context.lineTo(mouseX, mouseY)\n      this.context.closePath()\n      this.context.stroke()\n      this.context.moveTo(mouseX, mouseY)\n    }\n  }\n  render() {\n    return (\n      <div className=\"staganography-widget\"\n        style={{width: this.width, height: this.height}}>\n       <img\n         className=\"steganography-widget__background-img\"\n         width={this.width} height={this.height}\n         src={greeksImgUrl}\n         alt=\"два греки, яким можна стерти волосся, щоб побачити надписи «бунтуй» і «слухаюсь» на їхніх головах\" />\n       <img\n         className=\"steganography-widget__hidden_img\"\n         src={hairImgUrl} ref={this.hairImgRef}\n         width={this.width} height={this.height}\n         onLoad={e=>this.loadCanvas()} alt=\"\"/>\n       <canvas\n         className=\"steganography-widget__canvas\"\n         ref={this.canvasRef} width={this.width}\n         height={this.height}\n         onMouseDown={this.startDrawing}\n         onMouseUp={this.stopDrawing}\n         onMouseLeave={this.stopDrawing}\n         onMouseMove={this.continueDrawing}\n       />\n    </div>\n    )\n  }\n}","import React from 'react'\nimport {withRouter} from 'react-router'\n\nimport {LevelsContext} from '../LevelsContex'\nimport './NextChapterLink.css'\n\n\nclass NextChapterLink extends React.Component {\n  static contextType = LevelsContext\n  constructor(props) {\n    super(props)\n    this.state = {\n      userKeyword: '',\n      touched: false,\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleInput = this.handleInput.bind(this)\n    this.keywordIsCorrect = this.keywordIsCorrect.bind(this)\n  }\n\n  handleInput(e) {\n    this.setState({\n      userKeyword: e.target.value\n    })\n  }\n\n  handleSubmit() {\n    if (!this.state.touched) {\n      this.setState({touched: true})\n    }\n    if (this.keywordIsCorrect()) {\n      this.context.addPassedLevel(this.props.level)\n      this.props.history.push(this.props.link)\n    }\n  }\n\n  keywordIsCorrect() {\n    return this.state.userKeyword.trim().toLowerCase() === this.props.keyword\n  }\n\n  render () {\n    return <div className=\"next-chapter-link command\">\n      <p className=\"command__phrase next-chapter-link__label\">Щоби перейти далі введи слово-ключ: </p>\n      <div className=\"next-chapter-link__controls\">\n        <input type=\"text\" placeholder=\"Ключове слово\"\n          value={this.state.userKeyword}\n          onChange={this.handleInput}\n          className=\"next-chapter-link__input\"\n          onKeyUp={e => {if (e.keyCode === 13) {this.handleSubmit()}}}\n        />\n        <button onClick={this.handleSubmit} className=\"next-chapter-link__button\">></button>\n      </div>\n      { (this.state.touched && !this.keywordIsCorrect())\n        ? <p className=\"next-chapter-link__label next-chapter-link__label_wrong\">От і ні. Слово сховане у тексті вище.</p>\n        : null\n      }\n    </div>\n  }\n}\n\nexport default withRouter(NextChapterLink)","import React from 'react'\n\nimport './Modal.css'\n\n\nexport default class Modal extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.contentRef = React.createRef()\n    this.handleClickOutside = this.handleClickOutside.bind(this)\n  }\n\n  handleClickOutside(event) {\n    try {\n      if (!this.contentRef.current.contains(event.target)) {\n      this.props.handleStay()\n      }\n    } catch { }\n  }\n\n  componentDidMount() {\n    document.addEventListener(\n      'click', this.handleClickOutside\n    )\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\n      'click', this.handleClickOutside\n    )\n  }\n\n  render() {\n    const {handleStay, handleLeave} = this.props\n    return <div className='modal__background'>\n     <div className='modal__content' ref={this.contentRef}>\n      <p className='modal__text-explanation'>\n        Ти хочеш перейти до наступної частини не зламавши шифру\n        у кінці цього розділу. Це нічого,\n        але ще крутіше було би <em>здобути рівень</em>.\n        Для цього зламай шифр, знайди секретне слово-ключ\n        і введи його у поле внизу сторінки.\n      </p>\n      <button className='modal__btn modal__btn_stay' onClick={handleStay}>\n        Залишитися і здобути\n      </button>\n      <button className='modal__btn modal__btn_go' onClick={handleLeave}>\n        Перейти далі\n      </button>\n     </div>\n    </div>\n  }\n}","import React from 'react'\nimport { withRouter } from 'react-router'\n\nimport {LevelsContext} from '../../LevelsContex'\nimport Modal from './Modal'\nimport './NavContainer.css'\n\n\nclass NavigationContrainer extends React.Component {\n  static contextType = LevelsContext\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      modalShown: false\n    }\n\n    this.goForward = this.goForward.bind(this)\n    this.handleForward = this.handleForward.bind(this)\n    this.showModal = this.showModal.bind(this)\n    this.hideModal = this.hideModal.bind(this)\n  }\n\n  showModal() {\n    this.setState({modalShown: true})\n  }\n\n  hideModal() {\n    this.setState({modalShown: false})\n  }\n\n  handleForward() {\n    if (!this.context.levelsPassed[this.props.level - 1]) {\n      this.showModal()\n    } else {\n      this.goForward()\n    }\n  }\n\n  goForward() {\n    this.props.history.push(this.props.linkForward)\n  }\n\n  render() {\n    const {children, linkForward, linkBack, history} = this.props\n    return <div>\n      {linkForward\n        ? <div className='nav__link nav__link_right' onClick={this.handleForward}></div>\n        : null\n      }\n      {linkBack\n        ? <div className='nav__link nav__link_left'\n            onClick={() => history.push(linkBack)}></div>\n        : null\n      }\n      {children}\n      {this.state.modalShown\n        ? <Modal handleStay={this.hideModal} handleLeave={this.goForward} />\n        : null}\n    </div>\n  }\n}\n\nexport default withRouter(NavigationContrainer)","import React from 'react'\n\nimport CaesarCipherWidget from '../components/CaesarWidget';\nimport CaesarBreakWidget from '../components/CaesarBreakWidget'\nimport { caesarText } from './cipherTexts'\nimport { encipher } from '../ciphers/caesar'\nimport SteganographyWidget from '../components/SteganographyWidget'\nimport NextChapterLink from '../components/NextChapterLink'\nimport NavigationContainer from '../components/NavigationContainer/index'\n\n\nexport default function ChapterOne() {\n  return (\n<NavigationContainer linkForward='/2' level={1}>\n<article>\n<h1>\n  <span>Історія таємного письма: <br/></span>\n  <span>як зберегти свої секрети <br/></span>\n  <span>і викрасти чужі</span>\n</h1>\n\n<summary className=\"main-text\">\n  <p>\n    Сивочолі мужі минулого зрекли немало гарних слів про секрети. Більшість із\n    них зводиться до двох порад:\n    по-перше, своїх таємниць не слід довіряти навіть найближчим друзям,\n    по-друге, взагалі ліпше їх не заводити (секрети, не друзів).\n  </p>\n  <p>\n    Але, сивочолі мужі, як же бути з паролем до Інстаграму чи Твіттеру?\n    Хоч ці сервіси&nbsp;— не наші найрідніші друзі,\n    а треба повідомляти їм свій секретний пароль при кожному вході.\n    Багато таємниць створені саме для того, щоби ними ділитися,\n    і часто це доводиться робити письмово.\n    Тому люди придумали безліч хитрих методів писати так, щоб повідомлення зрозуміли тільки ті,\n    кому воно адресоване.\n    Та охочих бути в курсі чужих таємниць теж не бракувало,\n    і вони додумалися, як обхитрити ці хитрі методи.\n    Тоді інші вигадали ще хитріші методи. Тоді їх перемогли ще хитрішими способами…\n    Такі змагання «хто кого» тривають і досі.\n  </p>\n  <p>\n    У&nbsp;цій статті ти познайомишся із кількома історичними методами таємного письма,\n    дізнаєшся, як вони працюють, хто їх використовував, і найважливіше&nbsp;— де їхні\n    слабкі місця, по яких можна завдати руйнівного удару.\n  </p>\n</summary>\n\n<p className=\"main-text\">\n  Давним-давно, за півтисячоліття до нашої ери, одному колишньому мілетському тирану на ім’я Гістіей\n  треба було послати таємне повідомлення своєму небожеві Аристагору,\n  щоби підбурити того до повстання.\n  Справа нехитра, взяв він свого найвідданішого раба,\n  поголив йому голову, витатуював там те, що хотів сказати,\n  зачекав, поки волосся відросте, і послав його у подорож на кілька тисяч кілометрів.\n  Добравшися до Аристагора, раб сказав, так і так, я від Гістіея, поголи мені голову.\n  Це був один із перших задокументованих випадків успішної передачі секретного послання.\n</p>\n\n<div className=\"command\">\n  <p className=\"command__phrase\">\n    Клацни і совгай мишкою, щоб стерти зачіски цих греків і побачити таємний діалог на їхніх головах.\n  </p>\n\n  <SteganographyWidget width={800} />\n</div>\n\n<p className=\"main-text\">\n  У Гістіеєвого методу багато недоліків, особливо добре їх, певне, відчув той раб.\n  А з технічного боку найбільша його слабкість в тому,\n  що він намагається приховати не зміст послання, а сам факт його існування.\n  Щоб метод спрацював, треба було, аби вороги Гістіея не здогадалися,\n  що секретний напис&nbsp;— на голові посланця.\n  У багатьох випадках вдавати, що ніякого таємного листування не відбувається&nbsp;— не варіант.\n  Тому слід зробити так, щоб навіть, якщо вороги доберуться до листа,\n  вони не змогли його зрозуміти.\n  Іншими словами, текст треба <em>зашифрувати</em>&nbsp;— перетворити його в якусь тарабарщину,\n  яку зможе прочитати тільки людина, яка має секретний ключ.\n</p>\n\n<h2>Шифр Цезаря</h2>\n\n<p className=\"main-text\">\n  Подивімося крок за кроком, як працює шифрування.\n  Поточні досягнення криптографії&nbsp;— науки про секретний обмін інформацією&nbsp;— надзвичайно складні,\n  тому почнемо з простого древнього методу&nbsp;— шифру Цезаря.\n  Його використовував, звичайно, Цезар&nbsp;— правитель Стародавнього Риму.\n  Скажімо, одного дня він вирішив повідомити оратору й адвокату Цицеронові таке:\n  <span className='msg-quote'> «Прочитав твою книжку&nbsp;— чудово написано!»</span>.\n  Він бере цей текст, і кожну букву в ньому заміняє на ту,\n  що стоїть в алфавіті на три позиції далі від неї: А&nbsp;— на Г, Б&nbsp;—&nbsp;на Ґ і так далі;\n  третя з кінця буква Ь заміниться на першу&nbsp;— А, так наче абетка замкнена у коло.\n</p>\n\n<div className=\"command\">\n  <p className=\"command__phrase\">\n    Вистав число 3 у полі «ключ», щоб побачити, як виглядає Цезареве повідомлення зашифрованим.\n  </p>\n\n  <CaesarCipherWidget title='Метод Цезаря: Шифрування'\n    text='прочитав твою книжку&nbsp;— чудово написано!'\n    successKey={3} />\n</div>\n\n\n<p className=\"main-text\">\n  Тепер Цезар може надіслати цю безглузду тарабарщину Цицерону.\n  Але той не розгубиться, бо знає, чого чекати від Цезаря.\n  Він може провести зворотну операцію&nbsp;— взяти кожну літеру зашифрованого тексту\n  і зсунути її в абетці на три позиції назад.\n  Так він отримає початкове повідомлення і втішиться, що Цезар високо оцінив його книжку.\n  Свою відповідь він може зашифрувати тим самим способом.\n</p>\n\n<div className=\"command\">\n<p className=\"command__phrase\">\n  Використай ключ 3, щоб прочитати Цицеронову відповідь.\n</p>\n\n<CaesarCipherWidget title='Метод Цезаря: Розшифрування'\n  text='жвнцб, в фхгугдфв' successKey={3} reverse />\n</div>\n\n<p className=\"main-text\">\n  Початкове повідомлення, як-то <span className='msg-quote'>«Прочитав твою книжку&nbsp;— чудово написано!»</span>,\n  називається <em>відкритим текстом</em>, зашифроване&nbsp;— <em>шифротекстом</em>.\n  Послідовність дій, яку треба виконати,\n  щоби перетворити перше повідомлення, у друге звуть <em>алгоритмом шифрування</em>.\n  Крім самого тексту, він використовує <em>ключ</em>&nbsp;— у цьому випадку число три.\n  Ключ може змінюватися без зміни алгоритму, наприклад, якби Цезар шифрував ключем 5,\n  то всі букви слід було би зсовувати на п’ять позицій в алфавіті.\n  Отримувач повідомлення, щоби прочитати його,\n  повинен знати ключ і <em>алгоритм розшифрування</em>&nbsp;—\n  послідовність дій, зворотну до шифрування.\n  Пару алгоритмів шифрування/дешифрування називають <em>шифром</em>.\n</p>\n\n<p className=\"main-text\">\n  Отже, двоє людей, які хочуть таємно переписуватися, мають зустрітися,\n  домовитися про шифр і ключ, а тоді вже спокійно обмінюватися засекреченими листами, коли треба.\n  Звісно, ключ слід тримати у найстрогішій таємниці.\n  Краще, щоб вороги не знали також і про вибраний шифр.\n  Але якщо він надійний, то це знання не повинно допомогти їм докопатися до суті повідомлення.\n  Єдиним ключем до розшифрування має бути, власне, ключ.\n</p>\n\n<p className=\"main-text\">\n  Шифр Цезаря&nbsp;— ненадійний. Щоб розгадати його,\n  зловмисникам вистачить мінімальних знань з <em>криптоаналітики</em>&nbsp;—\n  розділу криптографії про злом шифрів, або навіть просто клепки в голові.\n  Це тому, що шифр Цезаря можна атакувати найпростішим способом&nbsp;— <em>«грубою силою»</em>.\n  Для цього слід узяти всі можливі ключі і пробувати кожен підряд,\n  поки не вийде щось схоже на людську мову.\n  Варіантів не так вже й багато&nbsp;— на один менше, ніж довжина абетки.\n  Навіть вручну&nbsp;— це раз плюнути, а з допомогою комп’ютера&nbsp;— то як плюнути одну тисячну разу.\n</p>\n\n<div className=\"command\">\n  <p className=\"command__phrase\">\n    Спробуй підібрати ключа до такого тексту:\n  </p>\n\n  <CaesarBreakWidget title='Метод Цезаря: Злом' text={encipher(5, caesarText.toLowerCase())}\n    successKey={5} />\n</div>\n\n<NextChapterLink keyword=\"одноалфавіт\" link=\"/2\" level={1}/>\n</article>\n</NavigationContainer>\n)}","import { ALPHABET } from './alphabet'\n\nexport const KEY_1 = \"xhsane$gipwb@m*&%#roc^fvlujzkqtdy\"\nexport const KEY_2 = \"%&hu*txswm$nblkiya@oz^jgqfpdc#rev\"\n\n\nexport function makeSubstDict(key, reverse=false) {\n  const substDict = {}\n  for (let i=0; i < ALPHABET.length; i++) {\n    if (reverse) {\n      substDict[key[i]] = ALPHABET[i]\n    } else {\n      substDict[ALPHABET[i]] = key[i]\n    }\n  }\n  return substDict\n}\n\nfunction _cipher(substDict, text) {\n  return text\n    .split('')\n    .map(l => substDict[l.toLowerCase()] || l)\n    .join('')\n}\n\nexport function encipher(text, key) {\n  key = key || KEY_1\n  return _cipher(makeSubstDict(key), text)\n}\n\nexport function decipher(text, key) {\n  key = key || KEY_1\n  return _cipher(makeSubstDict(key, true), text)\n}\n","import React from 'react'\n\nimport {encipher, decipher, KEY_1 } from '../ciphers/monoalphabet'\nimport { ALPHABET, FULL_ALPHADICT } from '../ciphers/alphabet'\nimport SubstTable from './SubstTable'\n\n\nexport default class monoalphabetWidget extends React.Component {\n  constructor(props) {\n    super(props)\n    const initText = 'тут ти можеш ввести текст, який хочеш зашифрувати'\n    this.state = {\n      openText: initText,\n      cipherText: encipher(initText),\n      highlightIndex: null,\n    }\n\n    this.handleTextChange = this.handleTextChange.bind(this)\n  }\n\n  handleTextChange(e, isCipher) {\n    const text = e.target.value\n    const prevText = isCipher? this.state.cipherText : this.state.openText\n    let highlightIndex\n    let highlightLetter\n    if (text.length - prevText.length === 1) {\n      for (let i = 0; i < text.length; i++) {\n        if (text[i] !== prevText[i]) {\n          if (isCipher && ALPHABET.includes(text[i].toLowerCase())) {\n            break\n          }\n          highlightLetter = isCipher? decipher(text[i]) : text[i]\n          highlightLetter = highlightLetter && highlightLetter.toLowerCase()\n          highlightIndex = FULL_ALPHADICT[highlightLetter]\n          break\n        }\n      }\n    }\n    const openText = isCipher? decipher(text) : text\n    const cipherText = isCipher? text : encipher(text)\n    this.setState({\n      openText: openText,\n      cipherText: cipherText,\n      highlightIndex: highlightIndex,\n    })\n  }\n\n  render() {\n    return <section className=\"cipher-widget cipher-widget_monoalphabet\">\n      <h3 className='cipher-widget__title'>Метод одноалфавітної заміни</h3>\n      <div className=\"cipher-widget__body\">\n        <MonoalphabetInput\n          title=\"Відкритий текст\"\n          value={this.state.openText}\n          handleChange={e => this.handleTextChange(e)}\n          isPlain\n        />\n        <h4 className=\"cipher-widget__section_title\">Таблиця заміни</h4>\n        <SubstTable\n          openAlphabet={ALPHABET}\n          cipherAlphabet={KEY_1}\n          highlightIndex={this.state.highlightIndex}\n        />\n        <MonoalphabetInput\n          title=\"Шифротекст\"\n          value={this.state.cipherText}\n          handleChange={e => this.handleTextChange(e, true)}\n        />\n       </div>\n    </section>\n  }\n}\n\nfunction MonoalphabetInput({title, value, handleChange, isPlain}) {\n  const className = \"cipher-widget__text cipher-widget__secret-text \"\n    + (isPlain? \"cipher-widget__text_plain\" : \"\")\n  return (\n    <div className=\"cipher-widget_monolaphabet__input\">\n      <h4 className=\"cipher-widget__section_title\">{title}</h4>\n      <textarea className={className} rows={1}\n      value={value} onChange={handleChange}\n      />\n    </div>\n  )\n}","export const monoAlphBreakText = {\n  \"0\": {\n    \"letter\": \"$\",\n    \"freq\": 9.062170706\n  },\n  \"1\": {\n    \"letter\": \"%\",\n    \"freq\": 9.062170706\n  },\n  \"2\": {\n    \"letter\": \"@\",\n    \"freq\": 8.956796628\n  },\n  \"3\": {\n    \"letter\": \"h\",\n    \"freq\": 6.6385669125\n  },\n  \"4\": {\n    \"letter\": \"a\",\n    \"freq\": 6.2170706006\n  },\n  \"5\": {\n    \"letter\": \"n\",\n    \"freq\": 5.9009483667\n  },\n  \"6\": {\n    \"letter\": \"i\",\n    \"freq\": 5.6902002107\n  },\n  \"7\": {\n    \"letter\": \"k\",\n    \"freq\": 4.320337197\n  },\n  \"8\": {\n    \"letter\": \"j\",\n    \"freq\": 4.2149631191\n  },\n  \"9\": {\n    \"letter\": \"z\",\n    \"freq\": 3.6880927292\n  },\n  \"10\": {\n    \"letter\": \"x\",\n    \"freq\": 3.2665964173\n  },\n  \"11\": {\n    \"letter\": \"m\",\n    \"freq\": 3.1612223393\n  },\n  \"12\": {\n    \"letter\": \"o\",\n    \"freq\": 2.9504741834\n  },\n  \"13\": {\n    \"letter\": \"g\",\n    \"freq\": 2.8451001054\n  },\n  \"14\": {\n    \"letter\": \"y\",\n    \"freq\": 2.8451001054\n  },\n  \"15\": {\n    \"letter\": \"^\",\n    \"freq\": 2.8451001054\n  },\n  \"16\": {\n    \"letter\": \"t\",\n    \"freq\": 2.7397260274\n  },\n  \"17\": {\n    \"letter\": \"v\",\n    \"freq\": 2.1074815595\n  },\n  \"18\": {\n    \"letter\": \"l\",\n    \"freq\": 1.7913593256\n  },\n  \"19\": {\n    \"letter\": \"&\",\n    \"freq\": 1.7913593256\n  },\n  \"20\": {\n    \"letter\": \"d\",\n    \"freq\": 1.5806111697\n  },\n  \"21\": {\n    \"letter\": \"w\",\n    \"freq\": 1.3698630137\n  },\n  \"22\": {\n    \"letter\": \"u\",\n    \"freq\": 1.3698630137\n  },\n  \"23\": {\n    \"letter\": \"c\",\n    \"freq\": 1.3698630137\n  },\n  \"24\": {\n    \"letter\": \"f\",\n    \"freq\": 0.9483667018\n  },\n  \"25\": {\n    \"letter\": \"q\",\n    \"freq\": 0.7376185458\n  },\n  \"26\": {\n    \"letter\": \"e\",\n    \"freq\": 0.7376185458\n  },\n  \"27\": {\n    \"letter\": \"r\",\n    \"freq\": 0.6322444679\n  },\n  \"28\": {\n    \"letter\": \"p\",\n    \"freq\": 0.5268703899\n  },\n  \"29\": {\n    \"letter\": \"#\",\n    \"freq\": 0.3161222339\n  },\n  \"30\": {\n    \"letter\": \"s\",\n    \"freq\": 0.210748156\n  },\n  \"31\": {\n    \"letter\": \"b\",\n    \"freq\": 0.105374078\n  }\n}\n\nexport const Chapter2Text = {\n '0': {'freq': 9.0338019743, 'letter': 'а'},\n '1': {'freq': 8.914148968, 'letter': 'о'},\n '10': {'freq': 3.8887227042, 'letter': 'л'},\n '11': {'freq': 3.5895901885, 'letter': 'е'},\n '12': {'freq': 3.4699371822, 'letter': 'м'},\n '13': {'freq': 2.8716721508, 'letter': 'д'},\n '14': {'freq': 2.8417588992, 'letter': 'у'},\n '15': {'freq': 2.6921926413, 'letter': 'п'},\n '16': {'freq': 2.2734071194, 'letter': 'з'},\n '17': {'freq': 2.0041878552, 'letter': 'я'},\n '18': {'freq': 1.6452288364, 'letter': 'б'},\n '19': {'freq': 1.4059228238, 'letter': 'ь'},\n '2': {'freq': 8.0466646724, 'letter': 'и'},\n '20': {'freq': 1.3460963207, 'letter': 'ш'},\n '21': {'freq': 1.2862698175, 'letter': 'й'},\n '22': {'freq': 1.256356566, 'letter': 'ч'},\n '23': {'freq': 1.1965300628, 'letter': 'г'},\n '24': {'freq': 0.9871373018, 'letter': 'ф'},\n '25': {'freq': 0.837571044, 'letter': 'ж'},\n '26': {'freq': 0.7777445408, 'letter': 'ц'},\n '27': {'freq': 0.7478312893, 'letter': 'х'},\n '28': {'freq': 0.7179180377, 'letter': 'ї'},\n '29': {'freq': 0.6580915345, 'letter': 'ю'},\n '3': {'freq': 6.1023033204, 'letter': 'т'},\n '30': {'freq': 0.5085252767, 'letter': 'є'},\n '31': {'freq': 0.3290457673, 'letter': 'щ'},\n '32': {'freq': 0.0299132516, 'letter': 'ґ'},\n '4': {'freq': 6.0424768172, 'letter': 'н'},\n '5': {'freq': 5.6835177984, 'letter': 'і'},\n '6': {'freq': 5.294645528, 'letter': 'в'},\n '7': {'freq': 4.6963804966, 'letter': 'р'},\n '8': {'freq': 4.6365539934, 'letter': 'с'},\n '9': {'freq': 4.1878552199, 'letter': 'к'}}","import React from 'react'\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\n\n\nexport class LetterFreques extends React.PureComponent {\n  render () {\n    let {\n      lettersInfo, upsidedown, isPlainText,\n      hightlightLetter, selectedLetter, hightlightedLetter\n    } = this.props\n    const letters = []\n    if (! hightlightLetter) {\n      hightlightLetter = e => null\n    }\n    for (let i=0; i < Object.keys(lettersInfo).length; i++) {\n      let letter = lettersInfo[i]\n      letters.push(\n        <LetterFreq letter={letter.letter} freq={letter.freq}\n          upsidedown={upsidedown} isPlainText={isPlainText}\n          hightlightLetter={hightlightLetter}\n          key={letter.letter} isSelected={letter.letter === selectedLetter}\n          isHighlighted={letter.letter === hightlightedLetter} />\n      )\n    }\n    return <div className=\"cipher-widget__letters-freq-cont\">{letters}</div>\n  }\n}\n\n\nexport class LetterFrequesDraggable extends React.PureComponent {\n  render() {\n    const {lettersInfo, upsidedown, isPlainText, onDragEnd,\n      lockedLetters, selectedLetter} = this.props\n    const letters = []\n    for (let i=0; i < Object.keys(lettersInfo).length; i++) {\n      let letter = lettersInfo[i]\n      let isLocked = lockedLetters[i]\n      letters.push(\n        <Draggable draggableId={letter.letter} index={i} key={letter.letter}\n          isDragDisabled={isLocked}\n        >\n          {(provided) => <LetterFreq letter={letter.letter} freq={letter.freq}\n              upsidedown={upsidedown} isPlainText={isPlainText}\n              hightlightLetter={() => null}\n              isSelected={letter.letter === selectedLetter}\n              isLocked={isLocked}\n              innerRef={provided.innerRef}\n              draggableProps={provided.draggableProps}\n              dragHandleProps={provided.dragHandleProps} />}\n        </Draggable>\n      )\n    }\n    return (\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"plain-text-container\" direction=\"horizontal\">\n          {(provided) =>\n            <div className=\"cipher-widget__letters-freq-cont\"\n             ref={provided.innerRef}\n             {...provided.droppableProps}>\n              {provided.placeholder}\n              {letters}\n            </div>\n          }\n        </Droppable>\n      </DragDropContext>\n    )\n }\n}\n\n\nfunction LetterFreq({letter, freq, upsidedown, isPlainText, hightlightLetter,\n    isLocked, innerRef,\n    draggableProps, dragHandleProps, isSelected, isHighlighted\n}) {\n  const freqInd = <FreqIndicator freq={freq} upsidedown={upsidedown} isPlainText={isPlainText} />\n  const textClassName = \"cipher-widget__text \"\n    + (isPlainText? 'cipher-widget__text_plain' : '')\n  const containerClassName = \"cipher-widget__letter-freq \"\n    + (isLocked? 'cipher-widget__letter-freq_locked ' : '')\n    + (isSelected? 'cipher-widget__letter-freq_selected ' : '')\n    + (isHighlighted? 'cipher-widget__letter-freq_highlighted ' : '')\n  return (\n    <div className={containerClassName} ref={innerRef}\n      {...draggableProps} {...dragHandleProps}\n      onClick={() => hightlightLetter(letter)}>\n      {upsidedown? null : freqInd}\n      <div className={textClassName}>{letter}</div>\n      {upsidedown? freqInd : null}\n    </div>\n  )\n}\n\nclass FreqIndicator extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    // other props aren't changing during component life cycle\n    return nextProps.freq !== this.props.freq\n  }\n\n  render() {\n    const {freq, upsidedown, isPlainText} = this.props\n    const width = 14, height=42\n    const freqR = Math.round(freq)\n    const bars = []\n    const barClassName = \"cipher-widget__pair-indicator-bar \" +\n      (isPlainText? \"cipher-widget__pair-indicator-bar_plain\" : \"\")\n    for (let i=0; i < freqR; i++) {\n      bars.push(\n        <line key={i} x1={0} x2={width} y1={i * 4 + 1} y2={i * 4 + 1}\n          className={barClassName} />\n      )\n    }\n    const transform = upsidedown? '' : `translate(${width}, ${height}) rotate(-180)`\n    return (\n      <svg width={width} height={height}>\n        <title>{freq.toFixed(2) + '%'}</title>\n        <g transform={transform}>{bars}</g>\n      </svg>\n    )\n  }\n}","import React from 'react'\n\n\nexport class PairingSwitches extends React.PureComponent {\n  render() {\n    const {paired, handleClick, reset} = this.props\n    const switches = paired.map(\n      (isPaired, i) => <PairingSwitch key={i} handleClick={e => handleClick(i)} isPaired={isPaired}/>\n    )\n    return <div className=\"cipher-widget__pair-indics-cont\">\n      <div className=\"cipher-widget__pair-reset\" title=\"Скинути\" onClick={reset}>×</div>\n      {switches}\n    </div>\n  }\n}\n\n\nfunction PairingSwitch({handleClick, isPaired}) {\n  return (\n    <div className=\"cipher-widget__pair-indicator-outer\" onClick={handleClick}>\n      <div className={\n        \"cipher-widget__pair-indicator-inner \" +\n        (isPaired? \"cipher-widget__pair-indicator-inner_active\" : null )}></div>\n    </div>\n  )\n}","import React from 'react'\n\nimport { placeWithinRange } from '../../ciphers/mathHelpers'\nimport {KEY_2, makeSubstDict} from '../../ciphers/monoalphabet'\n\n\nconst Hints = [\n  {\n    text: <p></p>,\n    conditions: {},\n  },\n  {\n    text: (<p>\n      Почнемо із трьох найпоширеніших символів, у шифротексті це\n      <span className=\"cipher-widget__text\" > $</span>,\n      <span className=\"cipher-widget__text\" > %</span>,\n      <span className=\"cipher-widget__text\"> @</span>.\n      Кожен з них займає приблизно 9% тексту, а наступний\n      <span className=\"cipher-widget__text\"> h</span> суттєво менш поширений (~6.5%).\n      Схожу закономірність бачимо і в нижньому рядку, три найчастіші букви — голосні\n      <span className=\"cipher-widget__text_plain\"> А</span>,\n      <span className=\"cipher-widget__text_plain\"> О</span>,\n      <span className=\"cipher-widget__text_plain\"> И</span>.\n      Поширення букв у тексті-зразку і шифротексті точно трохи відрізняється, але навряд чи настільки сильно,\n      щоби якась з цих голосних опинилася на четвертому чи дальшому місці, тому зараз потрібно лише\n      знайти відповідність між\n      <span className=\"cipher-widget__text\" > $</span>,\n      <span className=\"cipher-widget__text\" > %</span>,\n      <span className=\"cipher-widget__text\"> @ </span>\n      з одного боку і\n      <span className=\"cipher-widget__text_plain\"> А</span>,\n      <span className=\"cipher-widget__text_plain\"> О</span>,\n      <span className=\"cipher-widget__text_plain\"> И </span>\n      з іншого. На щастя, ми знаємо, що\n      слова в українській мові не починаються з букви И.\n      Також може стати в пригоді припущення, що драматичний вигук «О» у цьому тексті не дуже ймовірний,\n      а от сполучник «а» — цілком.\n    </p>\n  ),\n    conditions: {'$': 'и', '%': 'а', '@': 'о'}\n  },\n  {text: (<p>\n    Просуваємося далі списком найпоширеніших символів, наступний на черзі\n    <span className=\"cipher-widget__text\"> h</span>.\n    Розгадати, що це за буква допоможе слово\n    <span className=\"cipher-widget__text\"> hh</span>\n    <span className=\"cipher-widget__text_plain\">А</span>\n    <span className=\"cipher-widget__text\">w</span>\n    <span className=\"cipher-widget__text_plain\">А</span>\n    <span className=\"cipher-widget__text\">h^v </span>\n    у передостанньому рядку.\n    Серед букв зі схожою частотою у тексті-зразку (\n    <span className=\"cipher-widget__text_plain\">т</span>,\n    <span className=\"cipher-widget__text_plain\"> н</span>,\n    <span className=\"cipher-widget__text_plain\"> і</span>,\n    <span className=\"cipher-widget__text_plain\"> в</span>,\n    <span className=\"cipher-widget__text_plain\"> р</span>,\n    <span className=\"cipher-widget__text_plain\"> с</span>) тільки одна\n    подвоюється на початку слова.\n  </p>),\n  conditions: {h: 'в'}\n  },\n  {text: (\n    <p>\n      Також ми маємо достатньо інформації, щоби відгадати символ\n      <span className=\"cipher-widget__text\"> j </span> (9-ий за поширенням).\n      Він входить до складу таких слів з двох букв, як\n      <span className=\"cipher-widget__text\"> j</span><span className=\"cipher-widget__text_plain\">И</span> і\n      <span className=\"cipher-widget__text\"> j</span><span className=\"cipher-widget__text_plain\">А </span>\n      , тому може бути приголосною\n      <span className=\"cipher-widget__text_plain\"> т</span>,\n      <span className=\"cipher-widget__text_plain\"> б</span>,\n      <span className=\"cipher-widget__text_plain\"> г</span> або\n      <span className=\"cipher-widget__text_plain\"> х</span>. Одна з них значно ймовірніша за інші.\n    </p>),\n  conditions: {j: 'т'}\n  },\n  {\n    text: (<p>\n      Тепер майже 40% шифротексту розгадано, тому ти можеш бачити довші слова, які\n      нагадують щось людське, наприклад\n      <span className=\"cipher-widget__text_plain\"> ВИ</span>\n      <span className=\"cipher-widget__text\">k</span>\n      <span className=\"cipher-widget__text_plain\">О</span>\n      <span className=\"cipher-widget__text\">z</span>\n      <span className=\"cipher-widget__text_plain\">И</span>\n      <span className=\"cipher-widget__text\">^</span>\n      <span className=\"cipher-widget__text_plain\">ТОВ</span>\n      <span className=\"cipher-widget__text\">g</span>\n      <span className=\"cipher-widget__text_plain\">ВАТИ</span>\n      . Можеш відгадати, що криється за\n      символами\n      <span className=\"cipher-widget__text\"> k</span>,\n      <span className=\"cipher-widget__text\"> z</span>,\n      <span className=\"cipher-widget__text\"> ^</span>,\n      <span className=\"cipher-widget__text\"> g</span>?\n    </p>),\n    conditions: {k: 'к', z: 'р', '^': 'с', g: 'у'}\n  },\n  {\n    text: (<p>\n      Наступне майже розгадане слово\n      <span className=\"cipher-widget__text_plain\"> КРИ</span>\n      <span className=\"cipher-widget__text\">o</span>\n      <span className=\"cipher-widget__text_plain\">ТОА</span>\n      <span className=\"cipher-widget__text\">a</span>\n      <span className=\"cipher-widget__text_plain\">А</span>\n      <span className=\"cipher-widget__text\">in</span>\n      <span className=\"cipher-widget__text_plain\">ТИК</span>. Це ти зараз.\n    </p>),\n    conditions: {o: 'п', a: 'н', i: 'л', n: 'і'}\n  },\n  {\n    text: (<p>\n      Тепер уже зачіпок так багато, що очі розбігаються. Але, якщо не хочеш їх усі\n      впольовувати, просто клацни «Показати потрібні заміни», щоби побачити, чого ще бракує.\n    </p>),\n    conditions: makeSubstDict(KEY_2, true)\n  }\n]\n\n\nfunction getViolatedConditions(hintConditions, substDict) {\n  const violated = {}\n  for (let [key, val] of Object.entries(hintConditions)) {\n    if (!(key in substDict) || (substDict[key] !== val)) {\n      violated[key] = val\n    }\n  }\n  return violated\n}\n\n\nfunction mergeHintCondsTill(hintIndex) {\n  return Hints.slice(0, hintIndex + 1)\n    .map(hint => hint.conditions)\n    .reduce((acc, conds) => ({...acc, ...conds}), {})\n}\n\n\nfunction getHintButtonClasses(inactive) {\n  const defualtClass = 'cipher-widget__hint-button'\n  return inactive? defualtClass + ' cipher-widget__hint-button_inactive' : defualtClass\n}\n\n\nfunction Conditions(conditions) {\n  const conds = Object.entries(conditions).map(\n    ([key, val], index) => <span className=\"cipher-widget__violated-cond\" key={key}>\n      <span className=\"cipher-widget__text\">{key}</span> -> <span className=\"cipher-widget__text_plain\">{val + ' '}</span>\n    </span>\n  )\n  return <div className=\"cipher-widget__violated-conds\">{conds}</div>\n}\n\nfunction HintWarning() {\n  return <div className='cipher-widget__hint-warning'>\n    Кожна наступна підказка спирається на всі попередні. Спершу дорозгадай цю.\n  </div>\n}\n\n\nexport default class HintContainer extends React.Component {\n\n  // todo don't rerender on hover over the top line\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      hintIndex: 0,\n      showWarning: false,\n      showUnmetConditions: false,\n    }\n\n    this.showNextHint = this.showNextHint.bind(this)\n    this.startShowingUnmetConds = this.startShowingUnmetConds.bind(this)\n    this.currentStepIsComplete = this.currentStepIsComplete.bind(this)\n  }\n\n  startShowingUnmetConds() {\n    this.setState({showUnmetConditions: true})\n  }\n\n  currentStepIsComplete() {\n    const substDict = this.props.substDict\n    const hintConidtions = mergeHintCondsTill(this.state.hintIndex)\n    const violated = getViolatedConditions(hintConidtions, substDict)\n    return Object.keys(violated).length === 0\n  }\n\n  showNextHint(increment) {\n    let hintIndex = placeWithinRange(\n      this.state.hintIndex + increment, 0, Hints.length - 1\n    )\n    if (hintIndex - this.state.hintIndex > 0) {\n      const substDict = this.props.substDict\n\n      if (!this.currentStepIsComplete()) {\n        this.setState({showWarning: true})\n        return\n      }\n\n      while (\n        !Object.keys(getViolatedConditions(Hints[hintIndex].conditions, substDict)).length &&\n        hintIndex < Hints.length\n      ) {\n        hintIndex++\n      }\n    }\n    this.setState({\n      hintIndex: hintIndex,\n      showWarning: false,\n      showUnmetConditions: false,\n    })\n  }\n\n  render() {\n    const violatedConditions = getViolatedConditions(\n      mergeHintCondsTill(this.state.hintIndex),\n      this.props.substDict\n    )\n    const condsViolated = Object.keys(violatedConditions).length\n    const violatedConditionsEl = this.state.showUnmetConditions\n    ? Conditions(violatedConditions)\n    : null\n    return (\n    <div className=\"cipher-widget__text_hint\">\n      <div className='cipehr-widget__hint-controls'>\n        <button className={getHintButtonClasses(!(this.state.hintIndex > 0))}\n          onClick={e => this.showNextHint(-1)}>{'<'}</button>\n        <button className={getHintButtonClasses(this.state.hintIndex >= Hints.length - 1)}\n          onClick={e => this.showNextHint(1)}>Мені потрібна підказка ></button>\n        {this.state.showWarning && condsViolated? <HintWarning/> : null}\n      </div>\n      {Hints[this.state.hintIndex].text}\n      {this.state.hintIndex\n        ? <>\n            <button className={getHintButtonClasses(!condsViolated || this.state.showUnmetConditions)}\n              onClick={this.startShowingUnmetConds}>\n              Показати потрібні заміни\n            </button>\n            {violatedConditionsEl}\n          </>\n        : null}\n    </div>\n    )\n    }\n}\n\n","import React from 'react'\n\nimport { monoAlphBreakText, Chapter2Text } from '../../content/letterFrequency'\nimport { LetterFreques, LetterFrequesDraggable } from './LetterFrequencies'\nimport { PairingSwitches } from './PairingSwitches'\nimport { putIntoStorage, getFromStorage} from '../../LocalStorage'\nimport {KEY_2, makeSubstDict} from '../../ciphers/monoalphabet'\nimport HintContainer from './Hints'\nimport SuccessIndicator from '../SuccessIndicator'\n\nimport './MonoalphabetBreakWidget.css'\n\nconst PAIRS_KEY = 'monoalphabetPairs'\nconst REF_ORDER_KEY = 'monoalphabetRefOrder'\n\n\nexport default class MonoalphabetBreakWidget extends React.Component {\n  // todo maybe make subsDict cached\n  // todo test performance and optimise again\n  constructor(props) {\n    super(props)\n\n    this.getInitState = this.getInitState.bind(this)\n    this.state = this.getInitState()\n\n    this.reset = this.reset.bind(this)\n    this.toggleLettePairing = this.toggleLettePairing.bind(this)\n    this.processText = this.processText.bind(this)\n    this.setHighlighted = this.setHighlighted.bind(this)\n    this.reorderRefFrequency = this.reorderRefFrequency.bind(this)\n    this.getSubstDict = this.getSubstDict.bind(this)\n    this.setSelectedLetter = this.setSelectedLetter.bind(this)\n    this.isSuccess = this.isSuccess.bind(this)\n  }\n\n  getInitState() {\n    const letterCount = Object.keys(monoAlphBreakText).length\n    const pairings = getFromStorage(PAIRS_KEY) || Array(letterCount).fill(false)\n    const refLetterFreq = getFromStorage(REF_ORDER_KEY) || []\n    if (refLetterFreq.length === 0) {\n      for (let i=0; i < Object.keys(Chapter2Text).length; i++) {\n        refLetterFreq.push(Chapter2Text[i])\n      }\n    }\n    return {\n      pairings: pairings,\n      highlightedLetter: null,\n      refLetterFreq: refLetterFreq,\n      selectedRefLetter: '',\n      selectedTextLetter: '',\n    }\n  }\n\n  reset() {\n    putIntoStorage(PAIRS_KEY, null)\n    putIntoStorage(REF_ORDER_KEY, null)\n    this.setState(this.getInitState())\n  }\n\n  setSelectedLetter(letter, letterType) {\n    this.setState({\n      [letterType]: letter,\n    })\n  }\n\n  toggleLettePairing(index) {\n    const newPairings = this.state.pairings.map(\n      (isPaired, i) => i === index? !isPaired : isPaired\n    )\n    putIntoStorage(PAIRS_KEY, newPairings)\n    this.setState({\n      pairings: newPairings\n    })\n  }\n\n  setHighlighted(letter) {\n    this.setState({\n      highlightedLetter:\n        letter === this.state.highlightedLetter? null : letter\n    })\n  }\n\n  reorderRefFrequency(result) {\n    const { destination, source } = result\n    if (!destination) {return}\n    if (destination.index === source.index) {return}\n    const movingLetters = {}\n    const fixedLetters = {}\n    const movedLetter = this.state.refLetterFreq[source.index]\n    for (let i=0; i < this.state.refLetterFreq.length; i++) {\n      if (this.state.pairings[i]) {\n        fixedLetters[i] = this.state.refLetterFreq[i]\n      } else {\n        if (\n          !this.state.refLetterFreq[i] ||\n          this.state.refLetterFreq[i].letter !== movedLetter.letter\n        ) {\n          movingLetters[i] = this.state.refLetterFreq[i]\n        }\n      }\n    }\n    let destIndext = destination.index\n    while (destIndext in fixedLetters) {\n      destIndext--\n    }\n    if (destIndext < 0) {\n      destIndext = destination.index\n      while (destIndext in fixedLetters) {\n        destIndext++\n      }\n    }\n    fixedLetters[destIndext] = movedLetter\n    const moveLettersList = Object\n      .entries(movingLetters)\n      .sort((first, second) => second[0] - first[0])\n      .map(el => el[1])\n    const newRefLetterFreq = []\n    for (let i=0; i < this.state.refLetterFreq.length; i++) {\n      if (i in fixedLetters) {\n        newRefLetterFreq.push(fixedLetters[i])\n      } else {\n        newRefLetterFreq.push(moveLettersList.pop())\n      }\n    }\n    putIntoStorage(REF_ORDER_KEY, newRefLetterFreq)\n    this.setState({\n      refLetterFreq: newRefLetterFreq,\n    })\n  }\n\n  getSubstDict() {\n    const keyIndexes = this.state.pairings.map(\n      (e, i) => e? i : null\n    ).filter(e => e || e === 0)\n    const substDict = {}\n    for (let key of keyIndexes) {\n      substDict[monoAlphBreakText[key].letter] = this.state.refLetterFreq[key].letter\n    }\n    return substDict\n  }\n\n  processText() {\n    const substDict = this.getSubstDict()\n    const getClass = l => l === this.state.highlightedLetter? 'cipher-widget__text_higlighted ' : ''\n    const letters = this.props.text.split('').map(\n      (l, i) => substDict[l]\n        ? <span className={getClass(l) + \"cipher-widget__text_plain\"}  key={i}>{substDict[l]}</span>\n        : <span className={getClass(l)} key={i}>{l}</span>\n    )\n    return letters\n  }\n\n  isSuccess() {\n    const substDict = this.getSubstDict()\n    const correctDict = makeSubstDict(KEY_2, true)\n    for (const val of Object.values(monoAlphBreakText)) {\n      if (correctDict[val.letter] !== substDict[val.letter]) {\n        return false\n      }\n    }\n    return true\n  }\n\n  render() {\n    const substDict = this.getSubstDict()\n    const success = this.isSuccess()\n    const successClass = success? ' cipher-widget_success' : ''\n    return (\n      <section className={\"cipher-widget cipher-widget_monoalphabet\" + successClass}>\n        <SuccessIndicator isSuccess={success} />\n        <h3 className='cipher-widget__title'>Метод одноалфавітної заміни: Злом</h3>\n        <div className='cipher-widget__body'>\n          <HintContainer substDict={substDict}/>\n          <div style={{position: 'relative'}}>\n            <OneLetterInput letter={this.state.selectedTextLetter}\n              title={'Виділити букву шифротексту'}\n              letterSetter={l => this.setSelectedLetter(l, 'selectedTextLetter')}\n              bottom />\n            <LetterFreques lettersInfo={monoAlphBreakText} hightlightLetter={this.setHighlighted}\n              selectedLetter={this.state.selectedTextLetter}\n              hightlightedLetter={this.state.highlightedLetter} />\n          </div>\n          <PairingSwitches paired={this.state.pairings} handleClick={this.toggleLettePairing}\n            reset={this.reset} />\n          <div style={{position: 'relative'}}>\n            <OneLetterInput letter={this.state.selectedRefLetter}\n              title={'Виділити букву тексту-зразка'}\n              letterSetter={l => this.setSelectedLetter(l, 'selectedRefLetter')}/>\n            <LetterFrequesDraggable lettersInfo={this.state.refLetterFreq}\n              upsidedown isPlainText onDragEnd={this.reorderRefFrequency}\n              lockedLetters ={this.state.pairings}\n              selectedLetter={this.state.selectedRefLetter}/>\n          </div>\n          <CipherText text={this.props.text} substDict={substDict}\n            highlightedLetter={this.state.highlightedLetter} />\n        </div>\n      </section>\n    )\n  }\n}\n\n\nfunction processText(text, substDict, highlightedLetter) {\n  const getClass = l =>\n    (l === highlightedLetter? 'cipher-widget__text_higlighted ' : '') +\n    (substDict[l]? 'cipher-widget__text_plain ' : '')\n  let currLetter, currClass, prevClass, spans = [], currSpanText = ''\n  for (let i = 0; i < text.length; i++) {\n    currLetter = text[i]\n    prevClass = currClass\n    currClass = getClass(currLetter)\n    if (prevClass === currClass) {\n      currSpanText = currSpanText + (substDict[currLetter] || currLetter)\n    } else {\n      spans.push(<span className={prevClass} key={i}>{currSpanText}</span>)\n      currSpanText = (substDict[currLetter] || currLetter)\n    }\n  }\n  spans.push(<span className={currClass} key={text.length}>{currSpanText}</span>)\n  return spans\n}\n\n\nfunction CipherText({text, substDict, highlightedLetter}) {\n  return (\n    <p className=\"cipher-widget__secret-text cipher-widget__text \">\n      {processText(text, substDict, highlightedLetter)}\n    </p>\n  )\n}\n\n\nclass OneLetterInput extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.handleInput = this.handleInput.bind(this)\n  }\n\n  handleInput(e) {\n    const value = e.target.value\n    let result = ''\n    if (value.length) {\n      result = value[value.length - 1].toLowerCase()\n    }\n    this.props.letterSetter(result)\n  }\n\n  render() {\n    const isEmpty = !this.props.letter.length\n    const className = 'cipher-widget__letter-selector '\n      + (isEmpty? 'cipher-widget__letter-selector_empty ' : '')\n      + (this.props.bottom? 'cipher-widget__letter-selector_bottom' : '')\n    return (\n      <input className={className}\n        title={this.props.title}\n        type=\"text\" value={this.props.letter} onChange={this.handleInput} />\n    )\n  }\n}","import React from 'react'\n\nimport { encipher } from '../ciphers/monoalphabet'\n\nimport katerineDialogImg from '../img/katherine_ferdinand.png'\nimport './KaterineDialog.css'\n\n\nexport default function KaterineDialog() {\n  return <div className=\"kats-dialog\">\n    <div className=\"kats-dialog__msg kats-dialog__msg_kat\">\n      {encipher('Тату! Я хвилююся, що деякі леді тут залицяються до мого чоловіка.')}\n    </div>\n    <div className=\"kats-dialog__msg kats-dialog__msg_ferdi\">\n      {encipher('Нічого дивного, доню, жінки постійно втрачають голови через нас, королів.')}\n    </div>\n    <img src={katerineDialogImg} draggable={false} alt=\"розмова Катерини з батьком\"/>\n  </div>\n}","import React from 'react'\n\nimport MonoalphabetWidget from '../components/MonoalphabetWidget'\nimport {default as MonoalphabetBreakWidget, } from '../components/MonoalphabetBreakWidget/index'\nimport { LetterFreques } from '../components/MonoalphabetBreakWidget/LetterFrequencies'\nimport {KEY_2, encipher} from '../ciphers/monoalphabet'\nimport { monoalphabetText } from './cipherTexts'\nimport KaterineDialog from '../components/KaterineDialog'\nimport { Chapter2Text as Chapter2LetterFreques } from '../content/letterFrequency'\nimport NextChapterLink from '../components/NextChapterLink'\nimport NavigationContainer from '../components/NavigationContainer/index'\n\n\nexport default function ChapterTwo() {\n  return (\n<NavigationContainer linkBack='/' linkForward='/3' level={2}>\n<article>\n  <h2>Шифри одноалфавітної заміни</h2>\n  <p className=\"main-text\">\n    Шифр Цезаря&nbsp;— це один із прикладів шифрів <em>одноалфавітної заміни</em>.\n    Усі вони працюють за однаковим принципом&nbsp;— у відкритому тексті літери одного,\n    нормального, алфавіту замінюються на відповідники з іншого, зміненого.\n    Шифр Цезаря зручний тим, що новий секретний алфавіт у ньому будується на основі простого правила,\n    а ключ короткий і його легко запам’ятати, бо це одне невелике число.\n    А, в разі чого, і підібрати можна, що вже, звісно, погано.\n  </p>\n  <p className=\"main-text\">\n    Багато одноалфавітних шифрів не мають ніякого правила, як робити заміни.\n    Ключем є просто таблиця, у якій кожній букві відповідає який-небудь символ,\n    що має використовуватися у шифротексті замість неї.\n    Наприклад, для української абетки можна вибрати 33 символи і попарно протиставити їх 33 буквам.\n    Існує <span className='msg-quote'>8683317618811886495518194401280000000</span> різних\n    способів скласти такі пари.\n    Щоби підібрати ключа простим перебором, не вистачило б і часу, що пройшов від початку Всесвіту.\n    Тому на перший погляд здається, що такий шифр вже точно мав би бути надійним.\n  </p>\n\n  <div className=\"command\">\n    <p className=\"command__phrase\">\n      Спробуй зашифрувати чи розшифрувати власні повідомлення. Для цього введи текст у відповідне поле.\n    </p>\n    <MonoalphabetWidget/>\n  </div>\n\n  <p className=\"main-text\">\n    У Європі 16 століття з її інтригами, секретними домовленостями,\n    стратегічними шлюбами, змовами, вбивствами, зрадами й іншими такими справами,\n    одноалфавітні шифри були дуже популярними. Наприклад, в Англії однією з перших їх стала використовувати\n    Катерина Арагонська. Вона була дочкою іспанських короля і королеви Фердинанда II та Ізабелли I.\n    Коли їй виповнилося 16, Катерину відіслали до Англії,\n    де вона вийшла заміж за 14-річного королівського сина, але той наступного ж року помер.\n    Молода вдова залишилася сама на чужині і ще шість років чекала на весілля з наступним принцом,\n    та воно постійно відкладалося.\n  </p>\n  <p className=\"main-text\">\n    У цей час вона самостійно вивчила шифр, який використовував іспанський посол для спілкування з її батьком,\n    а згодом придумала власний. Її знання криптографії сприяло тому, що у 1507 році Катерина сама зайняла\n    дипломатичну посаду і стала прешою жінкою послом в історії Європи.\n\n    У 1509 Катеринин наречений зійшов на трон,\n    став англійським королем Генріхом VIII і нарешті одружився з нею.\n    Як королева Катерина продовжувала використовувати свій шифр, щоби бути таємною посередницею у спілкуванні\n    між двома монархами&nbsp;— своїм батьком і чоловіком.\n    Листи Катерини до Фердинанда II, між іншим, так і не розшифрували до 2018 року.\n    Але причиною цього міг бути брак уваги зі сторони дослідників, а не складність її шифру.\n  </p>\n  <div className=\"command\">\n    <p className=\"command__phrase\">\n      Репліки Катерини і її батька на картинці можна виділити і скопіювати.\n      Здогадуєшся, як їх розшифрувати?\n    </p>\n    <KaterineDialog />\n  </div>\n  <p className=\"main-text\">\n    Подивімося, як можна було би підійти до прочитання цих листів, якби вони потрапили тобі до рук.\n    Тут знадобиться якийсь розумніший метод, ніж просто пробувати всі можливі варіанти.\n    Добре було би знайти зачіпку&nbsp;— якусь закономірність у використанні букв,\n    що підкаже шлях до злому шифру.\n  </p>\n  <p className=\"main-text\">\n    Про одну таку закономірність знали арабські дослідники вже у 9 столітті&nbsp;— майже за 700 років до того,\n    як Катерина Арагонська писала свої листи.\n    Ці вчені надзвичайно серйозно ставилися до вивчення Корану, священної книги мусульман.\n    Вони не лише трактували зміст сакрального тексту, а й просто підраховували,\n    яка буква скільки разів там трапляється. Виявилося, що деякі літери у Корані дуже поширені,\n    а деякі, навпаки, вкрай рідкісні. Глянувши на інші тексти арабською,\n    дослідники зрозуміли, що розподіл частоти букв завжди зберігається більш-менш однаковим.\n    Один із вчених, полімат Аль-Кінді, здогадався використати цей факт,\n    аби знаходити ключі до зашифрованих повідомлень.\n    Він описав свій метод, який ми звемо <em>частотним криптоаналізом</em>,\n    у книжці «Манускрипт про дешифрування криптографічних листів».\n  </p>\n  <p className=\"main-text\">\n    Для частотного аналізу слід знати, якою мовою написане повідомлення.\n    Взяти досить великий зразок тексту цією мовою і підрахувати у ньому всі букви.\n    Далі зробити те ж із зашифрованим повідомленням.\n    Маючи списки частоти символів в обидвох текстах можна почати заміняти\n    найпоширеніші символи із шифротексту на найпоширеніші букви мови.\n    Це рідко дає цілком правильний результат відразу,\n    але частина букв стануть на свої місця, і в шифротексті почнуть впізнаватися деякі слова,\n    які можна використати, щоби виправляти помилки.\n  </p>\n  <p className=\"main-text\">\n    Спробуймо зламати одноалфавітний шифр українською мовою. Сам зашифрований текст&nbsp;— у\n    кінці сторінки, а ми почнемо з оцінки частоти букв в українській мові.\n    Граною ідеєю буде використати як зразок текст цього розділу.\n    Адже, якщо є така можливість, то найліпше вибирати щось, написане тим же автором,\n    на ту ж тему, що й зашифроване повідомлення.\n    Щоб тобі не довелося годинами сліпати над підрахунком букв&nbsp;— ось вже готова таблиця.\n  </p>\n  <div className=\"command\">\n    <div className='cipher-widget'>\n      <h3 className=\"cipher-widget__title\">Частота букв у тексті цього розділу</h3>\n      <div className='cipher-widget__body'>\n      <LetterFreques lettersInfo={Chapter2LetterFreques} isPlainText />\n      </div>\n    </div>\n  </div>\n  <div className=\"main-text\">\n    У підрахунку ми опустили всі символи, які не треба буде розшифровувати&nbsp;— розділові знаки, пробіли і\n    таке інше. Стовпці над кожною літерою показують, скільки відсотків тексту вона займає. Ти можеш навести\n    мишкою на стовпець і побачити конкретну цифру, але нас більше цікавлять загальні закономірності. Наприклад,\n    видно, що найпоширеніші&nbsp;— три голосні (А, О, И), вони не сильно відрізняються між собою за частотою, але\n    мають суттєвий відрив від наступної приголосної&nbsp;— Т. Це спостереження може бути зачіпкою для початку злому\n    шифротексту нижче. Вперед до наступного рівня криптоаналітичних вмінь!\n\n  </div>\n  <div className=\"command\">\n    <p className=\"command__phrase\">\n      Спробуй зламати цей шифр. Верхній (зелений) рядок показує частоту символів у шифротексті,\n      ти можеш наводити мишкою на будь-яку з букв, щоб побачити, де саме в тексті вона\n      зустрічається. Нижній (блакитний) рядок показує поширення символів у тексті-зразку.\n      Букви цього блоку можна перетягувати мишкою з місця на місце. Наприклад, якщо ти підозрюєш,\n      що за $ у шифротексті ховається літера Б, знайди Б у нижньому рядку (для цього можна використати\n      поле пошуку зліва), перетягни її під символ $ і клацни на кружечок між ними. Всі $ у\n      шифротекст зміняться на Б. Якщо тобі схочеться переставити букву Б в інше місце, спершу\n      «відчепи» її від $ клацнувши на смужці, яка їх сполучає.\n\n      Якщо ти раптом застрягнеш і не знатимеш, що роботи, можеш скористатися підказками.\n    </p>\n    <MonoalphabetBreakWidget text={encipher(monoalphabetText, KEY_2)}/>\n  </div>\n</article>\n<NextChapterLink link='/3' keyword='поліалфавіт' level={2}/>\n</NavigationContainer>)\n}","import React from 'react'\n\nimport NavigationContainer from '../components/NavigationContainer/index'\n\n\nexport default function ChapterThree() {\n  return <NavigationContainer linkBack='/2' level={3}>\n    <article className='main-text'\n      style={{\n        fontSize: '4em',\n        fontWeight: 'bold',\n        color: 'grey',\n        textAlign: 'center',\n        marginTop: '130px',\n      }}\n    >\n        Скоро буде…\n    </article>\n  </NavigationContainer>\n}","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport './App.css';\n\nimport { LevelsContext } from './LevelsContex'\nimport { getFromStorage, putIntoStorage } from './LocalStorage'\nimport LevelIndicator from './components/LevelIndicator/index'\nimport ChapterOne from './content/ChapterOne'\nimport ChapterTwo from './content/ChapterTwo'\nimport ChapterThree from './content/ChapterThree'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    const initLevelsPassed = getFromStorage('levelsPassed') || [false, false, false]\n    this.state = {\n      levelsPassed: initLevelsPassed,\n    }\n    this.addPassedLevel = this.addPassedLevel.bind(this)\n    this.updatedPassedLevels = this.updatedPassedLevels.bind(this)\n    this.clearPassedLevels = this.clearPassedLevels.bind(this)\n  }\n\n  updatedPassedLevels(levels) {\n    this.setState({\n      levelsPassed: levels\n    }, () => {\n      putIntoStorage('levelsPassed', this.state.levelsPassed)\n    })\n  }\n\n  clearPassedLevels() {\n    const levels = [...this.state.levelsPassed.map(l => false)]\n    this.updatedPassedLevels(levels)\n  }\n\n  addPassedLevel(level) {\n    const levels = [...this.state.levelsPassed.map(\n      (el, i) => i === level - 1? true : el\n    )]\n    this.updatedPassedLevels(levels)\n  }\n\n  render() {\n    const url = process.env.PUBLIC_URL\n    return (\n      <LevelsContext.Provider value={{\n        levelsPassed: this.state.levelsPassed,\n        addPassedLevel: this.addPassedLevel,\n        clearPassedLevels: this.clearPassedLevels,\n       }}>\n        <div className=\"App\">\n          <LevelIndicator/>\n          <Switch>\n            <Route exact path=\"/\" component={ChapterOne}/>\n            <Route path=\"/2\" component={ChapterTwo}/>\n            <Route path=\"/3\" component={ChapterThree}/>\n          </Switch>\n        </div>\n      </LevelsContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <HashRouter><App/></HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/key.a3886b52.svg\";","module.exports = __webpack_public_path__ + \"static/media/key_inactive.20d4dee9.svg\";","module.exports = __webpack_public_path__ + \"static/media/ancient_greeks_bold.52f725f2.png\";","module.exports = __webpack_public_path__ + \"static/media/ancient_greeks_hair.f4529119.png\";","module.exports = __webpack_public_path__ + \"static/media/katherine_ferdinand.098ae7ee.png\";"],"sourceRoot":""}