{"version":3,"sources":["DateTimeUtils.js","components/WeekSwitcher.js","CalendarClinet.js","EventProcessor.js","components/Calendar.js","App.js","serviceWorker.js","index.js"],"names":["DOWs","MONTHs","addDays","date","days","newDate","Date","setDate","getDate","formatTime","dt","zeroPadded","getHours","getMinutes","n","toString","padStart","getLastMonday","setHours","setMinutes","getDay","WeekSwitcher","_ref","startDate","endDate","incrementDate","react_default","a","createElement","className","onClick","startMonth","getMonth","endMonth","concat","formatDateRange","EVENTS_URL","getEvents","url","URL","search","URLSearchParams","key","singleEvents","showDeleted","orderBy","timeMin","toISOString","timeMax","getParams","fetch","then","res","json","DayParts","name","endHour","parseEvent","event","id","summary","description","startDT","start","dateTime","endDT","end","splitToBins","bins","binMembershipFunc","items","result","item","Array","from","reverse","pop","currItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","bin","value","push","err","return","splitEventsByDate","events","range","length","getDateRange","d1","d2","getFullYear","Calendar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showDescriptionOn","showDescirption","bind","assertThisInitialized","updateEvents","udateEvents","incrementStartDate","eventId","setState","increment","_this2","prevState","_this3","toConsumableArray","filter","e","status","map","error","console","log","_this4","dayCols","objectSpread","descriptionVisible","hideDescription","slice","d","DayColumn","Fragment","React","Component","Event","timeClass","EventDescription","hide","hidden","_ref2","title","DayPartBlock","_ref3","dow","eventEls","_ref4","dowName","dpEls","dp","el","splitEventsByDaypart","App","Calendar_Calendar","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0441fe63.chunk.js","sourcesContent":["export const DOWs = [\n  'неділя',\n  'понеділок',\n  'вівторок',\n  'середа',\n  'четвер',\n  \"п'ятниця\",\n  'субота',\n]\n\nexport const MONTHs = [\n  'Січень',\n  'Лютий',\n  'Березень',\n  'Квітень',\n  'Травень',\n  'Червень',\n  'Липень',\n  'Серпень',\n  'Вересень',\n  'Жовтень',\n  'Листопад',\n  'Грудень'\n]\n\nexport function addDays(date, days) {\n  const newDate = new Date(date)\n  newDate.setDate(newDate.getDate() + days)\n  return newDate\n}\n\n\nexport function isSameDate(d1, d2) {\n  return d1.getFullYear() === d2.getFullYear() &&\n    d1.getMonth() === d2.getMonth() &&\n    d1.getDate() === d2.getDate()\n}\n\nexport function formatTime(dt) {\n  dt = new Date(dt)\n  const hours = zeroPadded(dt.getHours())\n  const minutes = zeroPadded(dt.getMinutes())\n  return hours + ':' + minutes\n}\n\n\nexport function zeroPadded(n) {\n  return n.toString().padStart(2, '0')\n}\n\nexport function formatDate(dt) {\n  return `${zeroPadded(dt.getMonth() + 1)}.${zeroPadded(dt.getDate())}`\n}\n\nexport function getLastMonday() {\n  let date = new Date()\n  date.setHours(0)\n  date.setMinutes(0)\n  while (date.getDay() !== 1) {\n    date.setDate(date.getDate() - 1)\n  }\n  return date\n}\n\nexport function formatDateRange(startDate, endDate) {\n  // todo deal with end date - 1 in some more consistent way\n  // i.e. take timezones into account\n  endDate = addDays(endDate, -1)\n  const startMonth = MONTHs[startDate.getMonth()]\n  const endMonth = MONTHs[endDate.getMonth()]\n  if (startMonth === endMonth) {\n    return `${startMonth} ${startDate.getDate()} - ${endDate.getDate()}`\n  } else {\n    return `${startMonth} ${startDate.getDate()} - ${endMonth} ${endDate.getDate()}`\n  }\n}\n\n\nexport function getDateRange(startDate, endDate) {\n  const range = [startDate]\n  while (range[range.length - 1] < endDate) {\n    range.push(addDays(range[range.length - 1], 1))\n  }\n  return range\n}","import React from 'react'\n\nimport {formatDateRange} from '../DateTimeUtils.js'\n\n\nexport default function WeekSwitcher({startDate, endDate, incrementDate}) {\n  return (\n    <div className=\"calendar__week-switcher\">\n      <button className=\"calendar__week-switcher-button\" onClick={() => incrementDate(-7)}>{'<'}</button>\n      <button className=\"calendar__week-switcher-button\" onClick={() => incrementDate(7)}>{'>'}</button>\n      <h2 className=\"calendar__week-title\">\n        {formatDateRange(startDate, endDate)}\n      </h2>\n    </div>\n  )\n}","const CALNEDAR_ID = 'huvrl6on8orta0eq5jvpufjvhg@group.calendar.google.com'\nconst EVENTS_URL = `https://www.googleapis.com/calendar/v3/calendars/${CALNEDAR_ID}/events`\n\n\nfunction getParams(startDate, endDate) {\n  return new URLSearchParams({\n    key: 'AIzaSyBvM-T_PCBSbvDQUsgHe3hrXh3HfNnnR_4',\n    singleEvents: true,\n    showDeleted: false,\n    orderBy: 'startTime',\n    timeMin: startDate.toISOString(),\n    timeMax: endDate.toISOString(),\n  })\n}\n\nexport function getEvents(startDate, endDate) {\n  const url = new URL(EVENTS_URL)\n  url.search = getParams(startDate, endDate)\n  return fetch(url).then(res => res.json())\n}","import { isSameDate, getDateRange } from './DateTimeUtils'\n\nconst DayParts = [\n  {\n    name: 'morning',\n    endHour: 11,\n  }, {\n    name: 'day',\n    endHour: 18,\n  }, {\n    name: 'evening',\n    endHour: 24\n  }\n]\n\nexport function parseEvent(event) {\n  return {\n    id: event.id,\n    summary: event.summary,\n    description: event.description,\n    startDT: new Date(event.start.dateTime),\n    endDT: new Date(event.end.dateTime)\n  }\n}\n\nexport function splitToBins(bins, binMembershipFunc, items) {\n  items = Array.from(items).reverse()\n  const result = []\n  let item = items.pop()\n  let currItems = []\n  for (let bin of bins) {\n    while (item !== undefined && binMembershipFunc(bin, item)) {\n      currItems.push(item)\n      item = items.pop()\n    }\n    result.push([bin, currItems])\n    currItems = []\n  }\n  return result\n}\n\n// handle events out of the range\nexport function splitEventsByDaypart(events) {\n  const res = splitToBins(\n    DayParts, (dp, event) => event.startDT.getHours() < dp.endHour,\n    events\n  ).map(el => [el[0].name, el[1]])\n\n  return [...res]\n}\n\n// merege with daypart splitter\nexport function splitEventsByDate(events, startDate, endDate) {\n  // assuming events are sorted in ascending order\n  const dateRange = getDateRange(startDate, endDate)\n  const res = splitToBins(\n    dateRange, (bin, event) => isSameDate(bin, event.startDT),\n    events\n  )\n  return res\n}\n","import React from 'react'\n\nimport WeekSwitcher from './WeekSwitcher'\nimport { getEvents } from '../CalendarClinet'\nimport {\n  parseEvent, splitEventsByDate, splitEventsByDaypart\n} from '../EventProcessor.js'\nimport {\n  getLastMonday, addDays, formatDate, formatTime, DOWs\n} from '../DateTimeUtils.js'\n\nimport './Calendar.scss'\n\n\nexport default class Calendar extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      events: [],\n      showDescriptionOn: undefined,\n      startDate: getLastMonday(),\n    }\n\n    this.showDescirption = this.showDescirption.bind(this)\n    this.updateEvents = this.udateEvents.bind(this)\n    this.incrementStartDate = this.incrementStartDate.bind(this)\n  }\n\n  showDescirption(eventId) {\n    this.setState({showDescriptionOn: eventId})\n  }\n\n  incrementStartDate(increment) {\n    this.setState(prevState => ({\n      startDate: addDays(prevState.startDate, increment)\n    }), () => this.updateEvents())\n\n  }\n\n  udateEvents() {\n    const startDate = this.state.startDate\n    const endDate = addDays(startDate, 7)\n    getEvents(this.state.startDate, endDate).then(\n      result => {\n       this.setState({\n        events: [...result.items\n          .filter(e => !(e.status === 'cancelled'))\n          .map(parseEvent)]}\n        )\n      },\n      (error) => console.log(error)\n    )\n  }\n\n  componentDidMount() {\n    this.updateEvents()\n  }\n\n  render() {\n    const startDate = this.state.startDate\n    const endDate = addDays(startDate, 7)\n    const events = this.state.events.map(e => ({\n      ...e,\n      descriptionVisible: e.id === this.state.showDescriptionOn,\n      showDescirption: () => this.showDescirption(e.id),\n      hideDescription: () => this.showDescirption(),\n    }))\n    const eventsByDate = splitEventsByDate(\n      events,\n      startDate,\n      endDate\n    ).slice(0, 7)\n\n    const dayCols = eventsByDate.map(\n      d => (\n        <DayColumn date={d[0]} events={d[1]} key={d}/>\n      )\n    )\n    return (\n      <>\n      <WeekSwitcher startDate={startDate} endDate={endDate}\n        incrementDate={this.incrementStartDate}/>\n      <div className='calendar'>\n        {dayCols}\n      </div>\n      </>\n    )\n  }\n}\n\n\nfunction Event({event}) {\n  const {\n    summary, description, startDT, endDT,\n    showDescirption, descriptionVisible, hideDescription\n  } = event\n  const timeClass = 'calendar__event-time ' +\n    (descriptionVisible? 'calendar__event-time_em' : '')\n  return (\n    <article className=\"calendar__event\">\n      <h3 className=\"calendar__event-title\" onClick={showDescirption}>{summary}</h3>\n      <p className={timeClass}>{\n        formatTime(startDT)} - {formatTime(endDT)}\n      </p>\n      <EventDescription summary={summary} description={description}\n        hide={hideDescription} hidden={!descriptionVisible} />\n    </article>\n  )\n}\n\n\nfunction EventDescription({summary, description, hidden, hide}) {\n  const className = \"calendar__event-description \"\n    + (hidden? \"calendar__event-description_hidden\" : \"\")\n  return (\n    <div className={className}>\n      <h3 className=\"calendar__event-description-title\">{summary}</h3>\n      <p className=\"calendar__event-description-text\">{description}</p>\n      <div onClick={hide} className=\"calendar__close-event-descr-btn\" title='закрити'>×</div>\n    </div>\n  )\n}\n\nfunction DayPartBlock({name, events, dow}) {\n  const className = `calendar__slot calendar__slot_day_${dow} calendar__slot_${name}`\n  const eventEls = events.map(e => <Event key={e.id} event={e}/>)\n  return <div className={className}>\n    {eventEls}\n  </div>\n}\n\n\nfunction DayColumn({date, events}) {\n  const dow = date.getDay()\n  const dowName = DOWs[dow]\n  const eventsByDaypart = splitEventsByDaypart(events)\n  const dpEls = eventsByDaypart.map(\n    item => <DayPartBlock name={item[0]} key={item[0]} events={item[1]} dow={dow}/>\n  )\n\n  const dayClassName = 'calendar__slot_day_' + dow\n  const className = \"calendar__slot \" + dayClassName\n  return (\n  <>\n    <div className={className + \" calendar__slot_label\"}>\n      <h3 className=\"calendar__dow_title\">{dowName}</h3>\n      <p className=\"calendar__date\">{formatDate(date)}</p>\n    </div>\n    {dpEls}\n  </>)\n}","import React, { Component } from 'react';\n\nimport Calendar from './components/Calendar.js'\n\nclass App extends Component {\n  render() {\n    return (\n      <Calendar/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}